<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Art of Technology... Training - Alex Noll</title><link href="/" rel="alternate"></link><link href="/feeds/alex-noll.atom.xml" rel="self"></link><id>/</id><updated>2019-02-23T00:00:00-05:00</updated><entry><title>YouTube Camp Em 2019</title><link href="/youtube-camp-em-2019.html" rel="alternate"></link><published>2019-02-23T00:00:00-05:00</published><updated>2019-02-23T00:00:00-05:00</updated><author><name>Alex Noll</name></author><id>tag:None,2019-02-23:/youtube-camp-em-2019.html</id><summary type="html">&lt;p&gt;Studio Youtube Class&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Jump to &lt;a href="#current"&gt;Current Lesson&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;Description&lt;/h1&gt;
&lt;p&gt;4-week Session
Saturdays, March 2 - March 23, 10:00am-12:00pm&lt;/p&gt;
&lt;p&gt;Students will gain or expand their YouTube knowledge by creating their own YouTube channels, recording their own videos, editing their videos, and uploading their content. They will learn practical technological skills such as proper video recording, video editing, video publishing, and uploading videos to the internet.&lt;/p&gt;
&lt;h1&gt;Instructors&lt;/h1&gt;
&lt;h2&gt;Lead Instructor&lt;/h2&gt;
&lt;p&gt;Chris Kefalas&lt;/p&gt;
&lt;h2&gt;Additional Interns/Instructors&lt;/h2&gt;
&lt;p&gt;Alex Noll&lt;/p&gt;
&lt;h1&gt;Learning Objectives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;YouTube account and account maintenance.&lt;/li&gt;
&lt;li&gt;How to properly record a video.&lt;/li&gt;
&lt;li&gt;Understand what makes specific YouTubers famous, how to make viral content.&lt;/li&gt;
&lt;li&gt;How to improve video quality to appear professional.&lt;/li&gt;
&lt;li&gt;Know the different methods of screen capturing.&lt;/li&gt;
&lt;li&gt;Know the different tools needed for video editing.&lt;/li&gt;
&lt;li&gt;How to publish/finalize an edited video.&lt;/li&gt;
&lt;li&gt;How to upload a video to YouTube.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Day by Day Topics&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Proper camera skills&lt;/li&gt;
&lt;li&gt;The makings of a popular video&lt;ul&gt;
&lt;li&gt;Presentation on YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The formula to YouTube success&lt;ul&gt;
&lt;li&gt;Presentation on YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to make and operate a YouTube account&lt;ul&gt;
&lt;li&gt;Hands-on demos&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to come up with video ideas&lt;ul&gt;
&lt;li&gt;Brainstorming session&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to best capture footage depending on a video idea&lt;ul&gt;
&lt;li&gt;Review of Screen Recorders, Camcorders, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to edit videos&lt;ul&gt;
&lt;li&gt;Editing demos with students&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to finalize a video for uploading&lt;ul&gt;
&lt;li&gt;Editing demos with students&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Uploading a video to YouTube&lt;ul&gt;
&lt;li&gt;Uploading demo with students.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Materials&lt;/h1&gt;
&lt;p&gt;Students should have access to a device capable of accessing YouTube outside of class.&lt;/p&gt;
&lt;h1&gt;On the line Resources&lt;/h1&gt;
&lt;h2&gt;On the line Presentations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="decks/intro-to-code.html"&gt;Intro to Code without notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Day 1&lt;/h1&gt;
&lt;h2&gt;YouTube Content Creation Introduction&lt;/h2&gt;
&lt;p&gt;Wanna be a YouTube star?!?&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;h2&gt;Hands On&lt;/h2&gt;
&lt;p&gt;Setup Google/YouTube accounts with students.&lt;/p&gt;
&lt;h2&gt;Assignment&lt;/h2&gt;
&lt;p&gt;Brainstorming ideas for video recording next class. Creating students' individual/group YouTube accounts.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Google/YouTube accounts &amp;amp; YouTube video brainstorm worksheets.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;h1&gt;Day 2&lt;/h1&gt;
&lt;h2&gt;Recording your video&lt;/h2&gt;
&lt;p&gt;LIGHTS, CAMERA, ACTION!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/en/thumb/4/4e/Standby...Lights%21_Camera%21_Action%21_title_card.png/250px-Standby...Lights%21_Camera%21_Action%21_title_card.png" width="90" height="120"&gt;&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;Students will be able to record their footage wherever their desired setting may be, the greens screen will also be available for limitless background possibilities.&lt;/p&gt;
&lt;h2&gt;Hands On&lt;/h2&gt;
&lt;p&gt;We will spend the day acting out the students' ideas and recording them as needed.&lt;/p&gt;
&lt;h2&gt;Assignment&lt;/h2&gt;
&lt;p&gt;Recording a YouTube masterpiece.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Prepping the camera and its equipment (tripod, microphone, SD Card, Green Screen, Photo Lamps,  etc.).&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;h1&gt;Day 3&lt;/h1&gt;
&lt;h2&gt;Editing your videos&lt;/h2&gt;
&lt;p&gt;Clip, Clip, BOOM!&lt;/p&gt;
&lt;h2&gt;Hands On&lt;/h2&gt;
&lt;p&gt;We'll finalize recording our raw footage and then import it for editing. Next, the students will begin splicing, dubbing, and cropping their videos.&lt;/p&gt;
&lt;h2&gt;Assignment&lt;/h2&gt;
&lt;p&gt;Editing recorded footage to meet length requirements and desired quality.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Prepping equipment for editing &amp;amp; transferring footage.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;h1&gt;Day 4&lt;/h1&gt;
&lt;h2&gt;Uploading your videos&lt;/h2&gt;
&lt;p&gt;Off to the internet!&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;h2&gt;Hands On&lt;/h2&gt;
&lt;p&gt;Students will finalize the editing of their videos, next we will publish each student's video and prepare it for uploading. Finally, each student will add descriptors to their video when uploading to YouTube and then finalize the upload.&lt;/p&gt;
&lt;h2&gt;Assignment&lt;/h2&gt;
&lt;p&gt;To upload a finalized video to YouTube&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Devices for uploading. Printed pages with each student's YouTube channel URL for parents to keep.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;</content><category term="computer science"></category><category term="technology"></category><category term="youtube"></category></entry><entry><title>Intro To Code &amp; Robotics</title><link href="/intro-to-code-robotics.html" rel="alternate"></link><published>2018-09-01T00:00:00-04:00</published><updated>2018-09-01T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2018-09-01:/intro-to-code-robotics.html</id><summary type="html">&lt;h1&gt;Intro to Code&lt;/h1&gt;
&lt;h3&gt;Tabs or Spaces?&lt;/h3&gt;
&lt;p&gt;To start off the week, we laid out a basic foundation of programming knowledge through fun apps and games like LightBot which helped the campers get the fundamentals of programming down before moving to the more advanced keyboard based code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="LightBot" src="images/IMG_8047.JPG"&gt;&lt;/p&gt;
&lt;p&gt;After LightBot, we warmed â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Intro to Code&lt;/h1&gt;
&lt;h3&gt;Tabs or Spaces?&lt;/h3&gt;
&lt;p&gt;To start off the week, we laid out a basic foundation of programming knowledge through fun apps and games like LightBot which helped the campers get the fundamentals of programming down before moving to the more advanced keyboard based code.&lt;/p&gt;
&lt;p&gt;&lt;img alt="LightBot" src="images/IMG_8047.JPG"&gt;&lt;/p&gt;
&lt;p&gt;After LightBot, we warmed the campers up with everything they'd need to know to get started with Keyboard Coding! Functions, boxes, and data types galore!&lt;/p&gt;
&lt;p&gt;As the week progressed we moved each camper to their own AWS Cloud9 EC2 instance where they could tinker to their heart's content!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Looking into Monitor" src="images/IMG_8020.JPG"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Robotics&lt;/h1&gt;
&lt;h3&gt;Run Robot, Run!&lt;/h3&gt;
&lt;p&gt;The camp began with students designing and assembling their robots. This year we used Raspberry Pis and custom 3D printed frames allowing for much more customization than the Bombini Bots of old!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Collaborative Robot Design" src="images/IMG_8042.JPG"&gt;&lt;/p&gt;
&lt;p&gt;After configuring their robots for using SSH and VNC, they finally had a method of wireless communication and remote control for their robots!&lt;/p&gt;
&lt;p&gt;Using their VNCs from their iPads, campers were able to load programs onto their robots and modify them as they saw fit!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Robot Test" src="images/IMG_8010.JPG"&gt;&lt;/p&gt;</content><category term="computer science"></category><category term="techcamp"></category><category term="raspberry pi"></category><category term="programming"></category></entry><entry><title>Becoming a YouTube Star and Digital Artist!</title><link href="/becoming-a-youtube-star-and-digital-artist.html" rel="alternate"></link><published>2018-08-24T00:00:00-04:00</published><updated>2018-08-24T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2018-08-24:/becoming-a-youtube-star-and-digital-artist.html</id><summary type="html">&lt;p&gt;Video Making &amp;amp; Digital Arts&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Action!&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;It was awesome to see the campers unleash their creativity through their videos!  &lt;/p&gt;
&lt;p&gt;Campers learned the basics of Video Making and Cinematography, as well as the social science of YouTube and how to be successful on the ever-changing platform:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Green Screen" src="images/IMG_0023.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Production Process&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To start, campers had to brainstorm what they wanted in their videos and then how to implement their ideas in their videos    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Brain Blast" src="images/IMG_9972.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Next, the campers had to either film or screen record their videos. This year, the most common video topics were usually Fortnite or PUBG so often times, campers were using Apple's built-in screen recording tools  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After campers got their raw footage, they had to edit them to make them YouTube ready! For this, we used a wide array of tools, however iMovie was a camper favorite.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="YouTube" src="images/IMG_0026.jpg"&gt;
* &lt;strong&gt;Getting Publishing with YouTube&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Once you have your channel, you'll want to upload your video, uploading is a pretty complex process with many different variables to consider. To start, make sure you've prepared the video you want to upload by editing it and making sure it is the product you want the world to see.  &lt;/p&gt;
&lt;p&gt;After ensuring that your video is ready to be seen, you'll have to go to your main page on YouTube, then, in the top right corner of the page there's an upload button (an upward facing arrow) to click.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Upload Button" src="images/UPBUTTON.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;After going to the upload page, you' be prompted to select the content you want to upload, once selected you have to wait through an uploading process and processing process for your video to actually make its way onto YouTube.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Loading Screen" src="images/Upload.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;Next, you'll need to decide on a Title, Description, some Tags for your video, as well as the Video Thumbnail. Make sure your Tags are related to your video and that you include enough so that if a viewer searches a relevant term, they can find your video. You'll also want to keep your title short and relevant, while making your description more descript with the information that's excluded from the title.  &lt;/p&gt;
&lt;p&gt;For your Video's Thumbnail, it's best to verify your YouTube account by providing a phone number, this will allow you to upload your own Thumbnail pictures instead of using the ones that YouTube selects.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="YouTube Verification" src="images/verification.jpg"&gt;
After deciding on your Thumbnail, you're ready to upload. Just hit publish, and then your video is available for the  world to see!  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Digital Arts&lt;/strong&gt;
  + For digital arts, we focused less on camera-oriented art and more on digitally created artwork such as animation or logos&lt;/p&gt;
&lt;p&gt;&lt;img alt="Looking at iPad" src="images/IMG_9986.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We started off with logo and label design on Assembly as well as LogoMaker.com, the campers were extremely quick to learn how to use the tools to implement their designs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Collaboration" src="images/IMG_9984.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finally, we moved on to Animation where campers designed their own 3D Models on the computers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="3D Model" src="images/IMG_9975.jpg"&gt;&lt;/p&gt;
&lt;p&gt;We hope our campers enjoy their Digital Artwork and Videos, have a great rest of the summer and good start to the school year!&lt;/p&gt;</content><category term="Digital Arts"></category><category term="YouTube"></category><category term="Cinematography"></category><category term="computer science"></category></entry><entry><title>Device Camp 2018</title><link href="/device-camp-2018.html" rel="alternate"></link><published>2018-07-27T00:00:00-04:00</published><updated>2018-07-27T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2018-07-27:/device-camp-2018.html</id><summary type="html">&lt;h2&gt;Summer 2018 Device Engineering Camp&lt;/h2&gt;
&lt;p&gt;For all the code and more cool projects, visit https://github.com/davismohar/TechEmRpiCode  &lt;/p&gt;
&lt;p&gt;The kids are now experts at using Raspbian wih the Raspberry Pis!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Looking at Python" src="images/IMG_9586.JPG"&gt;  &lt;/p&gt;
&lt;p&gt;Throughout the Device Camp, we used the terminal and learned useful commands to navigate effortlessly through the pi and â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Summer 2018 Device Engineering Camp&lt;/h2&gt;
&lt;p&gt;For all the code and more cool projects, visit https://github.com/davismohar/TechEmRpiCode  &lt;/p&gt;
&lt;p&gt;The kids are now experts at using Raspbian wih the Raspberry Pis!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Looking at Python" src="images/IMG_9586.JPG"&gt;  &lt;/p&gt;
&lt;p&gt;Throughout the Device Camp, we used the terminal and learned useful commands to navigate effortlessly through the pi and to write our programs in Python. On the first day of camp, the campers set up their raspberry pi devices. They wired breadboards and coded in Python 2 in order to turn on a LED light.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="LED Breadboard" src="images/IMG_9571.JPG"&gt;  &lt;/p&gt;
&lt;h4&gt;Connecting LEDs to the Raspberry Pi &amp;amp; Breadboard&lt;/h4&gt;
&lt;p&gt;During the second day of camp, the campers added more LEDs to their breadboards and learned how to make their LEDs respond to events in games such as Minecraft and snake. By the end of the day, the breadboards were covered in LEDs!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Tinkering with Hardware" src="images/IMG_9579.JPG"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Engineering the code of Raspberry Pi Games&lt;/h4&gt;
&lt;p&gt;The snake game (Wormy) that comes pre-installed on the Pis was a fan favorite this week, so we wrote custom code for the game in python to make the game easier or harder, as the campers saw fit, or to turn on our LEDs when we got points. Another fan favorite this week was editing the code for Tetris to make it harder. Campers changed the shape and size of all of the pieces as well as changing how the game played.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Python" src="images/IMG_9570.JPG"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;It was awesome to see how comfortable the kids were with using the Raspberry Pi as the Device Camp progressed. The hands-on, &lt;strong&gt;'learn by doing'&lt;/strong&gt; approach achieved inspiring results. Navigating to and from all the directories, the Python prompt, running Python programs using sudo... -the campers would recall the commands they have been learning and using, so they flew (with ease!) through the process of typing instructions to have the pi carry them out.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To say the least, witnessing the skills these campers learned was an impressive sight!&lt;/strong&gt;  &lt;/p&gt;
&lt;hr&gt;</content><category term="raspberry pi"></category><category term="techcamp"></category><category term="computer science"></category><category term="terminal"></category><category term="python"></category><category term="coding"></category></entry><entry><title>Minecraft 3D &amp; 3D Devices Camp</title><link href="/minecraft-3d-3d-devices-camp.html" rel="alternate"></link><published>2018-07-06T00:00:00-04:00</published><updated>2018-07-06T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2018-07-06:/minecraft-3d-3d-devices-camp.html</id><summary type="html">&lt;p&gt;Minecraft in 3D, Devices in 3D&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Build it, Print it!&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;It was a great experience to see creative minds design complex builds in Minecraft and create intricate switching devices in Minecraft!  &lt;/p&gt;
&lt;p&gt;Campers learned the basics of 3D printing, including designing and the actual printing process. Below are the steps we completed to perform this:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Printer" src="images/IMG_9274.JPG"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The 3D Print process&lt;/strong&gt;  &lt;ul&gt;
&lt;li&gt;Campers created their own unique design on Minecraft.    &lt;/li&gt;
&lt;li&gt;We used the program Mineways to turn their Minecraft creations into a file that the printer can understand.  &lt;/li&gt;
&lt;li&gt;The file was then sent to the 3D Printer and printed into a unique 3D object that they could take home.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Yoda" src="images/IMG_9271.JPG"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;From the final camp email: You can get a sample of the projects we did from our site. Login to our secure site from our homepage or from this link: https://secure.techemstudios.com/enrolled_children. If logging in for the first time, use your square receipt id as your password (or use the password reset feature or contact us if you have trouble). You can easily change your password once logged in. From this site, you can download a zipfile containing a 3D Design file or Standard Triangle Language file ("stl") your child created.  &lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;3D Devices&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;We started off the camp on the Raspberry Pis with Python coding on Python Games where campers modified the games to their liking as they saw fit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Python Games" src="images/IMG_9239.JPG"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Next, we took our Python skills to everyone's favorite game, Minecraft! Campers were able to make their own Minecraft Mods and changes to the game.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Pi Minecraft" src="images/IMG_9248.JPG"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finally, we took our skills to LED Pendants where campers were able to program their own patterns onto the LED Pendants to take home with them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="LED Pendant" src="images/IMG_9283.JPG"&gt;&lt;/p&gt;
&lt;p&gt;We hope our campers enjoy their 3D builds and devices.&lt;/p&gt;
&lt;p&gt;Have a great rest of the summer!&lt;/p&gt;</content><category term="minecraft"></category><category term="techcamp"></category><category term="3D printing"></category><category term="computer science"></category></entry><entry><title>How to Install a Hardware Monitor on the Raspberry Pi</title><link href="/how-to-install-a-hardware-monitor-on-the-raspberry-pi.html" rel="alternate"></link><published>2017-08-10T00:00:00-04:00</published><updated>2017-08-10T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2017-08-10:/how-to-install-a-hardware-monitor-on-the-raspberry-pi.html</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;Installing Cayenne&lt;/h3&gt;
&lt;p&gt;To start, Cayenne is an IoT type hardware monitor in which you can check up on your Pi's status (Temperature, CPU load, GPU load, GPIO pins used, and much more!) from your mobile phone, or any web browser! Installation is as simple as creating an account and then â€¦&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;Installing Cayenne&lt;/h3&gt;
&lt;p&gt;To start, Cayenne is an IoT type hardware monitor in which you can check up on your Pi's status (Temperature, CPU load, GPU load, GPIO pins used, and much more!) from your mobile phone, or any web browser! Installation is as simple as creating an account and then running a few commands in your Pi's terminal.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cayenne" src="images/cayennedashboard.JPG"&gt;&lt;/p&gt;
&lt;h4&gt;Step-By-Step Instructions for Setting Up Cayenne&lt;/h4&gt;
&lt;p&gt;For starters, you'll need to create an account at &lt;a href="www.mydevices.com/cayenne"&gt;www.mydevices.com/cayenne&lt;/a&gt;, after this you'll want to log in, and the click on add new, followed by Device/Widget.&lt;/p&gt;
&lt;p&gt;&lt;img alt="1st Step" src="images/deviceadd.JPG"&gt;&lt;/p&gt;
&lt;p&gt;On the next page, you'll need to select Raspberry Pi, under Single Board Computers. The following page will include links to the mobile apps, should you want to setup from the mobile app, or it'll provide you with the commands to run in your Pi's Terminal. For this tutorial, we used the commands in the terminal: &lt;code&gt;wget https://cayenne.mydevices.com/dl/rpi_8hg1hglupv.sh&lt;/code&gt; , followed by &lt;code&gt;sudo bash rpi_8hg1hglupv.sh -v&lt;/code&gt; . Allow your Pi to fully install everything and it should be ready for on-the-move monitoring!&lt;/p&gt;
&lt;p&gt;&lt;img alt="1st Command" src="images/IMG_0543.JPG"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="2nd Command" src="images/IMG_0544.JPG"&gt;&lt;/p&gt;
&lt;hr&gt;</content><category term="computer science"></category><category term="raspberry pi"></category><category term="IoT"></category><category term="software"></category></entry><entry><title>How to make a Raspberry Pi Soundboard</title><link href="/how-to-make-a-raspberry-pi-soundboard.html" rel="alternate"></link><published>2017-08-10T00:00:00-04:00</published><updated>2017-08-10T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2017-08-10:/how-to-make-a-raspberry-pi-soundboard.html</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;How to Setup a Soundboard&lt;/h3&gt;
&lt;p&gt;For this tutorial, you'll need a Raspberry Pi, Breadboard, bunches of cables and buttons, and an output speaker (through HDMI or the 3.5mm output). Once you have everything, you're good to go. You'll have a lot of code to input, but you can also â€¦&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;How to Setup a Soundboard&lt;/h3&gt;
&lt;p&gt;For this tutorial, you'll need a Raspberry Pi, Breadboard, bunches of cables and buttons, and an output speaker (through HDMI or the 3.5mm output). Once you have everything, you're good to go. You'll have a lot of code to input, but you can also find the code here: &lt;a href="http://cdn.makezine.com/make/33/soundboard.py"&gt;http://cdn.makezine.com/make/33/soundboard.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;as for the many lines of code...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; import pygame.mixer
from &lt;span class="nb"&gt;time&lt;/span&gt; import sleep
import RPi.GPIO as GPIO
from sys import &lt;span class="nb"&gt;exit&lt;/span&gt;

GPIO.setmode&lt;span class="o"&gt;(&lt;/span&gt;GPIO.BCM&lt;span class="o"&gt;)&lt;/span&gt;
GPIO.setup&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;, GPIO.IN&lt;span class="o"&gt;)&lt;/span&gt;
GPIO.setup&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;, GPIO.IN&lt;span class="o"&gt;)&lt;/span&gt;
GPIO.setup&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;, GPIO.IN&lt;span class="o"&gt;)&lt;/span&gt;

pygame.mixer.init&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;48000&lt;/span&gt;, -16, &lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;1024&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;sndA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pygame.mixer.Sound&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.wav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;sndB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pygame.mixer.Sound&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.wav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;sndC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pygame.mixer.Sound&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.wav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;soundChannelA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pygame.mixer.Channel&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;soundChannelB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pygame.mixer.Channel&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;soundChannelC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; pygame.mixer.Channel&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

print &lt;span class="s2"&gt;&amp;quot;Sampler Ready.&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; True:
   try:
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;GPIO.input&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; True&lt;span class="o"&gt;)&lt;/span&gt;:
         soundChannelA.play&lt;span class="o"&gt;(&lt;/span&gt;sndA&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;GPIO.input&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; True&lt;span class="o"&gt;)&lt;/span&gt;:
         soundChannelB.play&lt;span class="o"&gt;(&lt;/span&gt;sndB&lt;span class="o"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;GPIO.input&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; True&lt;span class="o"&gt;)&lt;/span&gt;:
         soundChannelC.play&lt;span class="o"&gt;(&lt;/span&gt;sndC&lt;span class="o"&gt;)&lt;/span&gt;
      sleep&lt;span class="o"&gt;(&lt;/span&gt;.01&lt;span class="o"&gt;)&lt;/span&gt;
   except KeyboardInterrupt:
      exit&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After putting the code into a text editor, you'll need to get some .wav files to have play each time you hit a button, one place for some funny .wav files is: &lt;a href="http://cdn.makezine.com/make/33/pd_sound_effects.zip"&gt;http://cdn.makezine.com/make/33/pd_sound_effects.zip&lt;/a&gt;. After downloading, or creating you own .wav files, just put their file names on lines 13, 14, &amp;amp; 15. After completing these steps, you have some wiring to do.&lt;/p&gt;
&lt;p&gt;&lt;img alt="wiring" src="images/wiring.jpg"&gt;&lt;/p&gt;
&lt;p&gt;In the diagram shown, no breakout boards were used, but you can see the positive coming off of the 3v3 pin to the positive rail of the breadboard. After the positive, you'll need a ground, in the diagram, it's the 3rd pin on the right. Now you'll want to place down all of your buttons. After placing down all of your buttons, you'll need a positive from the positive rail connect to each button at the top pin of the button. After connecting the positives for each button, you'll need the GPIO cables for each button, as well as a 10K resistor, both of which are connected to the bottom pin of the button. The resistors have to connect to the negative rail, while the GPIO cables connect to pins 23, 24, and 25. After wiring everything up, you can return to the Terminal.&lt;/p&gt;
&lt;p&gt;&lt;img alt="our wiring" src="images/IMG_0547.JPG"&gt;&lt;/p&gt;
&lt;p&gt;You need to make sure to have all of your .WAV files and your .py file all in the same folder, preferably on your desktop. For this tutorial, we named our folder "soundboard", in the Terminal, you'll need to change your directory to the Desktop, and then to your folder, using: &lt;code&gt;cd Desktop&lt;/code&gt; and &lt;code&gt;cd soundboard&lt;/code&gt;, after this, run &lt;code&gt;sudo python soundboard.py&lt;/code&gt;. After running, wait until your Terminal says Sampler Ready and then you're good to go!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sampler Ready" src="images/IMG_0551.JPG"&gt;&lt;/p&gt;
&lt;hr&gt;</content><category term="computer science"></category><category term="raspberry pi"></category><category term="hardware"></category><category term="wiring"></category></entry><entry><title>Minecraft &amp; Robotics</title><link href="/minecraft-robotics.html" rel="alternate"></link><published>2017-07-13T00:00:00-04:00</published><updated>2017-07-13T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2017-07-13:/minecraft-robotics.html</id><summary type="html">&lt;h1&gt;Minecraft 3D Camp&lt;/h1&gt;
&lt;h3&gt;Can we build it?&lt;/h3&gt;
&lt;p&gt;At the beginning of the camp, students got their hands on their iPads and immediately started with a competitive build challenge.&lt;/p&gt;
&lt;p&gt;&lt;img alt="build challenge" src="images/BuildC.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Students continued to compete in build challenges throughout the week, one of the most notable was the redstone camp, where some campers â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Minecraft 3D Camp&lt;/h1&gt;
&lt;h3&gt;Can we build it?&lt;/h3&gt;
&lt;p&gt;At the beginning of the camp, students got their hands on their iPads and immediately started with a competitive build challenge.&lt;/p&gt;
&lt;p&gt;&lt;img alt="build challenge" src="images/BuildC.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Students continued to compete in build challenges throughout the week, one of the most notable was the redstone camp, where some campers worked together to create their own redstone contraptions&lt;/p&gt;
&lt;p&gt;&lt;img alt="Redstone Challenge" src="images/GroupRedstone.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Robotics&lt;/h1&gt;
&lt;h3&gt;Bombini Bot, GO!&lt;/h3&gt;
&lt;p&gt;The camp began with students taking their new Bombini Bots out of their boxes and examining their Arduinos. Upon receiving their new hardware, students needed to piece their robots together&lt;/p&gt;
&lt;p&gt;&lt;img alt="Robot Tire" src="images/TWIMG1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;After constructing their robots, the students quickly learned how to use Scratch and Arduino to program their Robots to move around the studio and complete various tasks.&lt;/p&gt;
&lt;p&gt;To finish off the camp, campers needed to run their robots through a gauntlet of tests and eventually faced off in a hockey match!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Robot Hockey" src="images/robothockey.jpg"&gt;&lt;/p&gt;</content><category term="computer science"></category><category term="techcamp"></category><category term="arduino"></category><category term="bombinibot"></category><category term="programming"></category><category term="3dprinting"></category></entry><entry><title>Make a Raspberry Pi Powered Alexa</title><link href="/make-a-raspberry-pi-powered-alexa.html" rel="alternate"></link><published>2017-06-29T00:00:00-04:00</published><updated>2017-06-29T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2017-06-29:/make-a-raspberry-pi-powered-alexa.html</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;Process for Building Your PiLexa&lt;/h3&gt;
&lt;p&gt;To start, you'll need a USB microphone, keyboard, mouse and speaker (connected via HDMI or the 3.5mm audio connector), and about an hour of time. Just to begin, you'll want to be running the latest version of Raspbian and you'll need an Amazon Developer â€¦&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;Process for Building Your PiLexa&lt;/h3&gt;
&lt;p&gt;To start, you'll need a USB microphone, keyboard, mouse and speaker (connected via HDMI or the 3.5mm audio connector), and about an hour of time. Just to begin, you'll want to be running the latest version of Raspbian and you'll need an Amazon Developer account as well.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pieces" src="images/IMG_0036.JPG"&gt;&lt;/p&gt;
&lt;h4&gt;Step-By-Step Instructions for Setting Up Alexa&lt;/h4&gt;
&lt;p&gt;Once you have everything ready, you'll need to be on developer.amazon.com and click on the alexa tab. Once there, you'll then click on the Alexa Voice Service. Next, click on the register a product button and choose device in the subfolder. You can set your Device Type ID and Display Name to whatever you want, but next you'll need to set your security profile description to also, whatever you want. You'll want to take note of your Client ID and Client Secret, as you'll need them later. Next you'll need to configure your web settings with the allowed origin as &lt;code&gt;https://localhost:3000&lt;/code&gt; and then for your allowed return url you'll need &lt;code&gt;https://localhost:3000/authresponse&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="1st Step" src="images/IMG_3033.JPG"&gt;&lt;/p&gt;
&lt;p&gt;Now that you have what you need from Amazon, it's time to get to configuring your Pi. On your Pi, you'll want to open up one terminal for now and type in "cd Desktop" , followed by &lt;code&gt;git clone https://github.com/alexa/alexa-avs-sample-app.git&lt;/code&gt; and press enter. Once that's done, you need to type &lt;code&gt;cd ~/Desktop/alexa-avs-sample-app&lt;/code&gt;. After that, type &lt;code&gt;nano automated_install.sh&lt;/code&gt; and press enter.&lt;/p&gt;
&lt;p&gt;Next you'll fill in your Product ID, Client ID, and Client Secret. Afterward you'll need to &lt;code&gt;cd ~/Desktop/alexa/alexa-avs-sample-app&lt;/code&gt; and press enter, then followed by &lt;code&gt;. automated_install.sh&lt;/code&gt; and press enter. At this point you should fill in each option that follows as needed.&lt;/p&gt;
&lt;p&gt;This following process requires three separate open terminals for each set of commands and must be done in sequential order. For the first terminal, type in &lt;code&gt;cd ~/Desktop/alexa-avs-sample-app/samples&lt;/code&gt; and press enter, then type in &lt;code&gt;cd companionService &amp;amp;&amp;amp; npm start&lt;/code&gt; and press enter.&lt;/p&gt;
&lt;p&gt;The next terminal will require the following two commands &lt;code&gt;cd ~/Desktop/alexa-avs-sample-app/samples&lt;/code&gt; with Enter, and then &lt;code&gt;cd javaclient &amp;amp;&amp;amp; mvn exec:exec&lt;/code&gt; with Enter. You'll want to make sure you're logged into your Amazon account and deal with any Java pop-ups that may occur.&lt;/p&gt;
&lt;p&gt;This is the last step, in which we will start the wake word engine so that your Pi will respond when you say "Alexa". To do this, in your third terminal you'll type in &lt;code&gt;cd ~/Desktop/alexa-avs-sample-app/samples&lt;/code&gt; and press Enter. and then, type in &lt;code&gt;cd wakeWordAgent/src &amp;amp;&amp;amp; ./wakeWordAgent -e kitt_ai&lt;/code&gt; and Press Enter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Finished" src="images/IMG_3078.JPG"&gt;&lt;/p&gt;
&lt;p&gt;Congratulations your PiLexa should be up and running, should you want to improve your diy echo's ability to understand you, you may want to type in &lt;code&gt;alsamixer&lt;/code&gt; , use f6 to select the audio device, and then adjust volume settings. To save your adjustments hit ESC, and then in a terminal type &lt;code&gt;sudo alsactl store&lt;/code&gt; and press Enter.  &lt;/p&gt;
&lt;p&gt;For even more information on the subject, definitely check out this article on LifeHacker, it provides visual demonstrations and a bit of trouble-shooting as well :&lt;a href="http://lifehacker.com/how-to-build-your-own-amazon-echo-with-a-raspberry-pi-1787726931"&gt;http://lifehacker.com/how-to-build-your-own-amazon-echo-with-a-raspberry-pi-1787726931&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Stay Tuned for the Chromebook-Ubuntu Powered Alexa!&lt;/h3&gt;
&lt;p&gt;&lt;img alt="teaser" src="images/IMG_0225.JPG"&gt;  &lt;/p&gt;</content><category term="computer science"></category><category term="raspberry pi"></category><category term="hardware"></category><category term="Echo"></category><category term="Alexa"></category></entry><entry><title>PiTop Building</title><link href="/pitop-building.html" rel="alternate"></link><published>2017-06-27T00:00:00-04:00</published><updated>2017-06-27T00:00:00-04:00</updated><author><name>Alex Noll</name></author><id>tag:None,2017-06-27:/pitop-building.html</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;Process for Building Your PiTop&lt;/h3&gt;
&lt;p&gt;The PiTop comes in the box with the chassis to house the custom PCB, Raspberry Pi, Keyboard and Trackpad, as well as all of the cables. Once you've unboxed your PiTop, you just need to obtain a 2nd or 3rd generation Raspberry Pi, and you're â€¦&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;Process for Building Your PiTop&lt;/h3&gt;
&lt;p&gt;The PiTop comes in the box with the chassis to house the custom PCB, Raspberry Pi, Keyboard and Trackpad, as well as all of the cables. Once you've unboxed your PiTop, you just need to obtain a 2nd or 3rd generation Raspberry Pi, and you're all good to go.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PiTop unboxing" src="images/IMG_3300.JPG"&gt;&lt;/p&gt;
&lt;p&gt;The base of the PiTop comes out of the box seperated from the keyboard and screen.The needed cables and screws are stored in seperate bags and the PiTop includes one extra of each screw, should you lose one.&lt;/p&gt;
&lt;p&gt;&lt;img alt="parts needed" src="images/IMG_3283.JPG"&gt;&lt;/p&gt;
&lt;h4&gt;Step-By-Step Instructions for Building your PiTop&lt;/h4&gt;
&lt;p&gt;Once you've prepped everything you need (Your Pi, your chassis, screws, and cables ), you can begin building the PiTop. To start, you'll want to install four brass spacers and bolts onto both the Pi and the custom PCB, a miniature socket wrench may be helpful, but it can be done without one as well.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pi Securing" src="images/IMG_3316.JPG"&gt;&lt;/p&gt;
&lt;p&gt;After you've installed the spacers, you'll want to prep the chassis for installation by removing the magnetic rails from the underside of the chassis. While focused on the chassis, you'll want to slide the screen and lid into the hinges on the base and then tighten it with the screws at the bottom of each hinge.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PiTop Underside" src="images/IMG_3269.JPG"&gt;&lt;/p&gt;
&lt;p&gt;Following the attachment of the screen and lid, you'll need eight of the silver spacers so you can install the custom PCB and Raspberry Pi onto the rails, starting with the PCB, you'll place it on the left side of the rail system and align the pins with the battery slots in the aluminum base. If properly plugged in, the brass spacers will begin to show on the underside of the rails, here you will use the silver spacers to screw in the spacers using a provided allen wrench.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Aligning PCB" src="images/IMG_3297.JPG"&gt;&lt;/p&gt;
&lt;p&gt;You will repeat the above process with the Raspberry Pi, without the process of aligning the pins. Move the Pi over to the right-hand side of the rail system, but not so far as to obstruct the USB ports (as you will need them later for the keyboard). Now you should connect the Pi with the PCB using the provided HDMI cable, Ribbon Cable (which should be routed through the provided cable management), and the USB cord for powering the Pi.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cabling" src="images/IMG_3310.JPG"&gt;&lt;/p&gt;
&lt;p&gt;After wiring the Pi with the PCB, you should prep the keyboard for installation and wire the power button connector to the PCB, while wiring the Keyboard connector to the bottom left USB port on the Pi.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Keyboard" src="images/IMG_3282.JPG"&gt;&lt;/p&gt;
&lt;p&gt;Upon connecting all of the wires, slide in your acrylic PiTop base, and boot it up. Congratulations, you've finished a PiTop!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Completion" src="images/IMG_3293.JPG"&gt;&lt;/p&gt;
&lt;p&gt;For more information, such as where to get your own PiTop or additional parts check out the following links below :
&lt;a href="https://www.adafruit.com/product/3065"&gt;https://www.adafruit.com/product/3065&lt;/a&gt;
and
&lt;a href="https://pi-top.com/"&gt;https://pi-top.com/&lt;/a&gt;&lt;/p&gt;</content><category term="computer science"></category><category term="raspberry pi"></category><category term="hardware"></category></entry></feed>