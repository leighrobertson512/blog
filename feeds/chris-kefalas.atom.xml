<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Art of Technology... Training - Chris Kefalas</title><link href="/" rel="alternate"></link><link href="/feeds/chris-kefalas.atom.xml" rel="self"></link><id>/</id><updated>2019-02-25T00:00:00-05:00</updated><entry><title>Studio Code Em Younglings Winter 2019</title><link href="/studio-code-em-younglings-winter-2019.html" rel="alternate"></link><published>2019-02-25T00:00:00-05:00</published><updated>2019-02-25T00:00:00-05:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2019-02-25:/studio-code-em-younglings-winter-2019.html</id><summary type="html">&lt;p&gt;Studio Code Em Class&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Jump to &lt;a href="#current"&gt;Current Lesson&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;Description&lt;/h1&gt;
&lt;p&gt;12-week Session
Tuesdays, February 5 - April 30, 6:30-7:30pm
(no class April 2)&lt;/p&gt;
&lt;p&gt;Students will be introduced to Computer Science, the Binary Number system, and computer programming&lt;/p&gt;
&lt;h1&gt;Instructors&lt;/h1&gt;
&lt;p&gt;Chris Kefalas&lt;/p&gt;
&lt;h1&gt;Materials&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;iPads&lt;/li&gt;
&lt;li&gt;Lightbot&lt;/li&gt;
&lt;li&gt;Hopscotch&lt;/li&gt;
&lt;li&gt;Whiteboard&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Online Resources&lt;/h1&gt;
&lt;p&gt;&lt;a href="decks/code-em.html"&gt;Code Em Deck&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Repos&lt;/h2&gt;
&lt;h2&gt;Related Blog Notes&lt;/h2&gt;
&lt;h2&gt;(GitHub) Assignments&lt;/h2&gt;
&lt;h2&gt;External References&lt;/h2&gt;
&lt;hr&gt;
&lt;h1&gt;Day 1&lt;/h1&gt;
&lt;h2&gt;Intro to Computer Science&lt;/h2&gt;
&lt;p&gt;History of Computer Science, and Computers. Talking about the progress we have made in the last couple decades, and ending with the transistor.&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;We will go over Lightbot first on the whiteboard, and then we will act out how it works by having one person play the programmer, and one person play the robot. The programmer will have to program the "human robot" with instructions in order to get it to move certain area of the room. We will see how putting these instructions in the correct order is crucial, we will also mention the concept of efficiency, and how we can work to make our programs more efficient.&lt;/p&gt;
&lt;h2&gt;Hands On&lt;/h2&gt;
&lt;p&gt;Kids will start with using the iPads along with an app called Lightbot. There they have to program a robot using the instructions that Lightbot provides. The first section of Lightbot focuses on sequences, and putting groups of instructions into code blocks, preparing us for procedures.&lt;/p&gt;
&lt;h2&gt;One Thing to Remember&lt;/h2&gt;
&lt;p&gt;Instructions and sequences. The students should be familiar, and comfortable organizing instructions into the correct order to produce the outcome that they want. Lightbot gives us the chance to do this by maneuvering out robot through the obstacle course until he has completed everything.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;We started off with the reveal deck, and went through the history of computers ending our discussion with transistors, and taking a look at the vacuum tubes. We talked a bit about computer programming, and went over Lightbot using the white board.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Day 2&lt;/h1&gt;
&lt;h2&gt;Base 10 and Base 2 Number Systems&lt;/h2&gt;
&lt;p&gt;We reviewed the history of computers, and talked about vacuum tubes, and transistors. Next we introduced how the Binary Number system relates to all this, and computer science.&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;We will start with going over the Base 10 number system which we are familiar with, and know as decimal. Then we will introduce what computers use to speak which is known as the Base 2 system, or the Binary number system. Using the white board we will go through converting 1-10 in decimal to binary and make sure we have a solid understanding of it.&lt;/p&gt;
&lt;h2&gt;Hands On/Coding&lt;/h2&gt;
&lt;p&gt;We will continue our progress with Lightbot. We ended last week with the first and second level of Section 2. We used the white board&lt;/p&gt;
&lt;h2&gt;One Thing to Remember&lt;/h2&gt;
&lt;p&gt;How to convert Decimal numbers to Binary numbers&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;The second day went really well, and we are making good progress on Lightbot.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Day 3&lt;/h1&gt;
&lt;h2&gt;Procedures, Review Binary Number System&lt;/h2&gt;
&lt;p&gt;We will review Binary Numbers, and practice converting&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;h2&gt;Hands-On/Coding&lt;/h2&gt;
&lt;p&gt;We will finish up Lightbot, and our understanding of procedures.&lt;/p&gt;
&lt;h2&gt;One Thing to Remember&lt;/h2&gt;
&lt;p&gt;Procedures keep you DRY!&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;We are rocking! She has a great understanding of the Base 10, and Base 2 number systems. We started with going over those on the whiteboard, and filling in our place values. And finishing with converting decimal numbers to binary digits. She has really enjoyed Lightbot so we stayed on that, and got all the way to the end of the Unloading section, which should be Section 3. I'm sure she will want to finish the last level because she likes the challenge and we couldn't figure it out before class ended, but after that we will move onto Hopscotch because she is totally ready. And I think will really enjoy all the flexibility and creativity that it allows.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a name="current"&gt;Day 4&lt;/a&gt;&lt;/h1&gt;

&lt;h2&gt;Why Binary? Objects In Hopscotch&lt;/h2&gt;
&lt;p&gt;Review the Binary Number system one last time, and make sure we have an understanding of how it is relevant to computer science. Move from Lightbot into the Hopscotch iPad app, start with talking about objects, and how they are programmable.&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;Conduct a class exercise to physically demonstrate how a transistor works:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select 3 kids, 1 transistor with its 3 connectors (base, collector, and emitter).&lt;/li&gt;
&lt;li&gt;Arrange the collector, transistor, and emitter in a line and stand the base beside the transistor, perpendicular to the line.&lt;/li&gt;
&lt;li&gt;Explain that the transistor can only have 1 tennis ball at a time and give her tennis ball to hold.&lt;/li&gt;
&lt;li&gt;Give the collector several tennis balls and explain that she needs to get those balls to the emitter thro ugh the transistor — one ball at a time.&lt;/li&gt;
&lt;li&gt;Explain that the transistor is “closed” because she is holding a tennis ball and therefore blocked.&lt;/li&gt;
&lt;li&gt;So, the base can take away the tennis ball, which will allow the collector to pass balls to the emitter one ball at a time using the “free space” in the transistor.&lt;/li&gt;
&lt;li&gt;The base can stop the flow, by giving the ball back to the transistor — shutting down the collector to emitter flow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Hands-On/Coding&lt;/h2&gt;
&lt;p&gt;Our first task will be learning how we can arrange instructions to draw shapes with code. Students will start by saying the instructions for this little program out loud. We will then take a look at the various instructions or snippets of code that Hopscotches gives us to carry out this objective of drawing shapes with code.&lt;/p&gt;
&lt;h2&gt;One Thing to Remember&lt;/h2&gt;
&lt;p&gt;Programmable objects in Hopscotch&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iPads&lt;/li&gt;
&lt;li&gt;Reveal deck&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;hr&gt;</content><category term="computer science"></category><category term="coding"></category><category term="github"></category><category term="slack"></category><category term="raspberry pi"></category><category term="technology"></category></entry><entry><title>Studio Camp Em Winter 2019</title><link href="/studio-camp-em-winter-2019.html" rel="alternate"></link><published>2019-02-16T00:00:00-05:00</published><updated>2019-02-16T00:00:00-05:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2019-02-16:/studio-camp-em-winter-2019.html</id><summary type="html">&lt;p&gt;Studio Camp Em, Session 1, Minecraft 3D and Design&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Jump to &lt;a href="#current"&gt;Current Lesson&lt;/a&gt;&lt;/h1&gt;
&lt;h1&gt;Description&lt;/h1&gt;
&lt;p&gt;We will take two of our favorite things, 3D Printing + Minecraft, and learn how we can take our designs from pixels to plastic! Students will use laptops to design, and create something in their Minecraft worlds. After we will export that to a special piece of software that allows us to create a type of file that the 3D printer can read. Weather you want to make a huge castle with a mout, or replicate a famous statue, there is no limit to what you can create. If you can build it, we can print it. &lt;/p&gt;
&lt;h1&gt;Instructors&lt;/h1&gt;
&lt;h2&gt;Lead Instructor&lt;/h2&gt;
&lt;p&gt;Chris Kefalas&lt;/p&gt;
&lt;h1&gt;Learning Objectives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Learn and comprehend basic concepts of dimensions&lt;/li&gt;
&lt;li&gt;Review and recognize some 3 dimensional geometric objects&lt;/li&gt;
&lt;li&gt;Use iPad apps to learn the basics of 3D design, and primitive shapes&lt;/li&gt;
&lt;li&gt;Have an understanding of the different components of the 3D printer, how it works, and how to change the filament&lt;/li&gt;
&lt;li&gt;Go through the process of exporting your Minecraft world to the Mineways software&lt;/li&gt;
&lt;li&gt;Prepare your print, and start it with the 3D printer&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Materials&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;iPads&lt;/li&gt;
&lt;li&gt;Macbooks&lt;/li&gt;
&lt;li&gt;3D Printers&lt;/li&gt;
&lt;li&gt;Minecraft&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Class References&lt;/h1&gt;
&lt;h1&gt;On the line Resources&lt;/h1&gt;
&lt;h2&gt;On the line Presentations&lt;/h2&gt;
&lt;h2&gt;Repos&lt;/h2&gt;
&lt;h2&gt;Related Blog Notes&lt;/h2&gt;
&lt;h2&gt;(GitHub) Assignments&lt;/h2&gt;
&lt;h2&gt;External References&lt;/h2&gt;
&lt;hr&gt;
&lt;h1&gt;Day 1&lt;/h1&gt;
&lt;h2&gt;Minecraft 3D Printing &amp;amp; Design&lt;/h2&gt;
&lt;p&gt;Our focus will be on the 3D printing mostly, and how everything works. Starting with our 3D Printing deck, students will learn about the third dimension, see examples of 3D prints, and learn about different methods that people have invented to print three dimension objects. After a quick discussion, we will hop onto the iPads and work with an app called 123D Design, as well as an app called Makerbot. &lt;/p&gt;
&lt;!--![If only.](images/if.jpg)--&gt;

&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;Examine the 3D printers, and get an understanding of how they operate. Start a print so we can see all the moving parts. &lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Start with the iPads and a couple different 3D design applications. We will use the Makerbot iPad software to create different types of customizable prebuilt items. After getting a grasp on that, we will move to 123D Design and start working with the primitive shapes, and our imaginations to design something from scratch! &lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;p&gt;How the 3D printer operates, and some vocabulary words like &lt;em&gt;third dimension&lt;/em&gt;, &lt;em&gt;extruder&lt;/em&gt;, and &lt;em&gt;filament&lt;/em&gt;. Students should also continue brainstorming what they would like to design, and print out! It never hurts to spend some time sketching out on paper with a pencil your ideas.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;The kids enjoyed the Reveal deck, especially the part about the 3D printer that prints with chocolate instead of plastics. We also took a look at both of the printers, and started a print so we could all see it in action. The MakerBot App was a lot of fun, I think they liked the bracelets the most, but they also made some really cool medals. I think it can be a little overwhelming starting with a blank slate, but we had some fun in 123D Design using different shapes, and learning how we could snap them together to create all sorts of wild things.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Day 2&lt;/h1&gt;
&lt;h2&gt;Minecraft 3D Printing &amp;amp; Design&lt;/h2&gt;
&lt;p&gt;Revisit some of the concepts that we had gone over the last class. Start looking at how we can use Minecraft as a way to design our ideas, and build them. Finally, use a software called Mineways to export them in a format that is acceptable for the 3D printer.&lt;/p&gt;
&lt;!--![If only.](images/if.jpg)--&gt;

&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Instead of using iPads we will all be using the Macbook laptops. Mineways unfortunately only works with the PC version of Minecraft. The kids will have two opportunities to build different things. The first challenge will be to build a house, castle, or structure of some kind. The second challenge will be to be to design and build a huge statue on a superflat world! Next, we will see how we can take those files and move them to Mineways to complete the next step in our process.&lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;p&gt;Today we went over the process, which is really four steps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build it&lt;/li&gt;
&lt;li&gt;Export to Mineways for conversation &lt;/li&gt;
&lt;li&gt;Import into Makerbot software for preparation&lt;/li&gt;
&lt;li&gt;Export onto a SD card, and put into the 3D Printer to start your print!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kids should have an understanding of this process, and what it takes for each step to be completed. First we need to create our design, in this instance we will be using Minecraft to create, and build. Then we need to essentially do a &lt;em&gt;simple&lt;/em&gt; file conversation from one format to different format, one that our Makerbot 3D Printer is able to understand. Next we will use the Makerbot software to lay out our design, and prepare it for printing. Lastly, we will get the final file onto an SD card, inserted into the printer and start the print. &lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;I've noticed over the years of teaching this class that different kids enjoy different ways of designing things, seems pretty obvious. But they also prefer certain devices. Being that this group is younger they definitely prefer the iPads for making things. Unfortunately Mineways only does PC Minecraft worlds, so working with the PC version presented some challenges. But they didn't seem too phased, after all it was still Minecraft! Throughout the week I will be printing off their creations in preparation for Saturday. &lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a name="current"&gt;Day 3&lt;/a&gt;&lt;/h1&gt;

&lt;h2&gt;&lt;/h2&gt;
&lt;!--![If only.](images/if.jpg)--&gt;

&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;We will take a look over the 3D printer, and learn about it's different parts. The kids will all take turns unloading and loading the filament, also learn what to do if the 3D printer gets jammed.&lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Learn about the process of exporting, importing, and then exporting again! In order for us to make this all work, we need to go through a process of converting our creation into a format that the 3D printer understands. Since we have a Makerbot 3D printer, we will be using their desktop software to prepare our prints.&lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;h1&gt;Day 4&lt;/h1&gt;
&lt;h2&gt;Minecraft 3D Printing &amp;amp; Design&lt;/h2&gt;
&lt;p&gt;Look at one last piece of software used to design things to 3D Print. The kids will use the Chromebooks, and play around with TinkerCAD. We will start right off with a 30 minute build-a-thon, and then quickly go through our process to speed print our builds! They will learn the different ways that 3D Printing can be slowed down, or sped up. &lt;/p&gt;
&lt;!--![If only.](images/if.jpg)--&gt;

&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;While waiting for our prints, the kids will have the chance to use a unique tool and that is the 3D Printing pen! The cool  thing about the 3D printing pen is that you can make 1D and 2D creations on a piece of paper, or you can very carefully start connecting things and build something 3D!&lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Working with the Chromebooks on a piece of software called TinkerCAD. It's an online web application that lets you use primitive shapes and prebuilt shapes to create anything! It has a couple tools similar to some of the other software we have used. Do a quick 30ish minute random build-a-thon and then speed print our designs in all sorts of colors! &lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;p&gt;Students should have an understanding of 3D printing, and what you can do with it. There are so many different applications, and we will only continue to see more in the future. They should be comfortable working with shapes in the third dimension, and have learned two different ways we can create modelsx, that can then be 3D printed in all sorts of materials and colors. &lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;h2&gt;Actual&lt;/h2&gt;</content><category term="computer science"></category><category term="coding"></category><category term="3d printing"></category><category term="minecraft"></category><category term="design thinking"></category></entry><entry><title>WEMS Coding Winter 2019</title><link href="/wems-coding-winter-2019.html" rel="alternate"></link><published>2019-02-14T00:00:00-05:00</published><updated>2019-02-14T00:00:00-05:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2019-02-14:/wems-coding-winter-2019.html</id><summary type="html">&lt;p&gt;WEMS Coding&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Description&lt;/h1&gt;
&lt;p&gt;Students will gain or expand their coding knowledge through a variety of programming languages and projects based on experience level, building from visual-based languages to Python. They will apply practical computer science skills such as source code control, software design, reverse engineering, bug resolution, and coding environments.&lt;/p&gt;
&lt;h1&gt;Instructors&lt;/h1&gt;
&lt;h2&gt;Lead Instructor&lt;/h2&gt;
&lt;p&gt;Chris Kefalas&lt;/p&gt;
&lt;h1&gt;Class Session Learning Objectives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;All students have a GitHub account and understand basic GitHub concepts of clone, pull, commit and push.&lt;/li&gt;
&lt;li&gt;All students can create and run a Python program on their own.&lt;/li&gt;
&lt;li&gt;All students understand design thinking and how to apply to planning software.&lt;/li&gt;
&lt;li&gt;All students know how to examine simple programs to understand how they work and how to alter.&lt;/li&gt;
&lt;li&gt;All students know how to deal with runtime errors and how to resolve.&lt;/li&gt;
&lt;li&gt;All students know the different tools needed for coding -- editors, interpreters and execution (runtime).&lt;/li&gt;
&lt;li&gt;All students create CLI program(s).&lt;/li&gt;
&lt;li&gt;Repeat students know how to branch and PR in GitHub.&lt;/li&gt;
&lt;li&gt;Repeat students will complete an appropriate level assignment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;On the line Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/techemstudios"&gt;Techem Github!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Repos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/techemstudios/MyFirstWebsite"&gt;MyFirstWebsite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Related Blog Notes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/github-part-one.html"&gt;Github Part One&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/github-part-two.html"&gt;Github Part Two&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Previous Classes in this session&lt;/h1&gt;
&lt;p&gt;The summary of &lt;a href="/wems-coding-winter-2019-daily-summaries.html"&gt;our previous classes&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Day 6&lt;/h1&gt;
&lt;h2&gt;GitHub - your online portfolio&lt;/h2&gt;
&lt;p&gt;We'll discuss GitHub, what it is and create an account.&lt;/p&gt;
&lt;p&gt;The students will setup their GitHub account. We'll cover how GitHub is also a public/social place and therefore our "Internet Safety" rules apply to GitHub as well. Also, because GitHub can become a digital portfolio that is used by future schools and employers during an application process, it is actually even more important to maintain a serious presence on GitHub since it is a real-time personal resume.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Git it?" src="images/github_screenshots/one.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;Using physical paper and file folders, our class activity will be a real-world analogy for GitHub. GitHub maintains all versions of the document (or code) you are editing -- for the activity the "GitHub" person will hold on to many file folders (a &lt;em&gt;repository&lt;/em&gt;), each one representing previous versions with the one on top being the most recent.&lt;/p&gt;
&lt;p&gt;When a student wants to edit the latest, she requests the latest from "GitHub", who will actually present a COPY of the latest for the student to edit.&lt;/p&gt;
&lt;p&gt;She takes the paper from the folder and makes some edits.&lt;/p&gt;
&lt;p&gt;She puts the paper back in the folder, &lt;em&gt;committing&lt;/em&gt; those changes to her copy of the folder.&lt;/p&gt;
&lt;p&gt;She then hands the folder back to "GitHub", &lt;em&gt;pushing&lt;/em&gt; those changes so that they can be included in the latest version of the folder.&lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Using a prepared GitHub repository, students will use the GitHub web editor to make changes to a website. Since GitHub also supports the publishing of websites, the students can immediately make see their changes on a live website. Their take-away from this class is a live website they can edit!&lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;p&gt;GitHub is your online Digital Portfolio.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Create a repo with gh-pages turned on (pointing to /docs). Add a simple HTML/CSS website for the students to edit. We can go ahead and use a custom domain like wems.techemstudios.com to make it easier for the students/parents to access.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;This is the
&lt;a href="/wems-coding-winter-2019-day-6.html"&gt;play by play&lt;/a&gt; for day 6!&lt;/p&gt;
&lt;h1&gt;Day 7&lt;/h1&gt;
&lt;h2&gt;Cloud9 - Coding in the Clouds&lt;/h2&gt;
&lt;p&gt;The students will do some text-based programming using the Python programming language. They will be using Python in an environment they can access from anywhere (with an Internet connection and browser) -- an environment aptly named Cloud9.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Py in the clouds" src="images/py-clouds.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;Starting with a discussion about the origin of the term "Cloud 9", we'll discuss how coding today is actually quite different than it was even 5 years ago. There are more computing services available "on the cloud" while the speed and availability of the Internet has increased. So, using students to represents "computers in the cloud", we can act out how we will be accessing "desktops" in the cloud to do our work.&lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Each student will have his/her own Cloud9 environment. They will each use a separate Tech Em AWS (Amazon Web Services) login to access this environment -- a virtual desktop loaded with everything they need to code in Python (and many other languages), pre-configured so we can focus on learning the language and typing programs. Initially, they need to get used to accessing a code editor and a computer console in their browser. They will learn how to create new Python files, run them, and even learn what to do when there are errors.&lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;p&gt;They should know how to create a Python file and run it (in their environment) -- &lt;em&gt;coding is bliss in the cloud&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;Prior to class, we created each student's Cloud9 environment. In doing so we also create them an AWS (Amazon Web Services) login in the Tech Em account. They will have a username and a beginning default password along with a unique link to their Cloud9 environment. The first time they access their environment they will need to provide their username and password and immediately change their password.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;As was to be expected, one of the biggest challenges here is "traditional" typing. The students were using our Chromebooks to access Cloud 9. So, while the Chromebooks and Wi-Fi held up nicely, lots of typing on a traditional keyboard can be a challenge. We are often seeing students who can likely type faster using a phone-thumb input than a full-sized qwerty keyboard. We imagine computer input will evolve and for now (much as it evolved from separate keypunch operators to programmings typing in their own code), For now, typing without touchscreen input is an area where programming is like a musical instrument or sport and the key is practice, practice, practice.&lt;/p&gt;
&lt;h1&gt;Day 8&lt;/h1&gt;
&lt;h2&gt;GitHub + Cloud9&lt;/h2&gt;
&lt;p&gt;Different clouds working together. Now we have a "laptop in the cloud" with its own set of folders -- we will learn how to "git" our code from the GitHub cloud onto our Cloud9 environment. Students will explore how to &lt;em&gt;commit&lt;/em&gt;, &lt;em&gt;push&lt;/em&gt; and &lt;em&gt;pull&lt;/em&gt; their changes from Cloud9 to/from GitHub.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Git it?" src="images/github-repos-flow.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;We will revisit the GitHub activity with a new twist, err, umm. cloud. We have a new player now, Cloud9. This player is not all that different than using a desktop or laptop and Git. We'll continue with the students acting as themselves, Cloud9 and GitHub to pass along documents (code) in folders in order to continue providing that physical representation of all this virtual activity!&lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Students will go back to the Website HTML -- this time, in their Cloud9 environment. They will use the same editing skills from last week and add some new skills to &lt;em&gt;pull&lt;/em&gt; (update) the code from GitHub to Cloud9; &lt;em&gt;commit&lt;/em&gt; their code in their Cloud9 environment and then &lt;em&gt;push&lt;/em&gt; that new code to Cloud9. The "latest in wins" game from 2 weeks ago will continue, but with a twist. Their &lt;em&gt;pushes&lt;/em&gt; will be blocked if they don't have the most recent code. This is intended to drive home the fact that GitHub maintains the primary repository for their code; each of their Cloud9 environments has a copy of what is in GitHub and it is actually up to them to keep their copy up-to-date.&lt;/p&gt;
&lt;p&gt;The passive intent here is to have students experience the issues a team has working on "the same document" at the same time. We will come back to that in future classes to discuss how team organization and additional Git capabilities can be used together to overcome these issues.&lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;p&gt;A pull a day keeps the conflicts away!&lt;/p&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;For Day 7 setup, the Cloud9 environments that were setup included a copy (clone) of the website repo. Therefore, students will already have that code available. They'll need to immediately &lt;em&gt;pull&lt;/em&gt; from the repo as a start to this lesson.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;Lots of typing, but the students are getting used to coding in a "text-based" environment while also using a text-based command-line interface as part of a development workflow.&lt;/p&gt;
&lt;h1&gt;&lt;a name="day-9"&gt;Day 9&lt;/a&gt;&lt;/h1&gt;

&lt;h2&gt;Cloud9 + Python&lt;/h2&gt;
&lt;p&gt;We will go back to coding in the clouds. Practice makes perfect and we want to ensure the students remember how to access their coding environment and create their own Python files so they can practice coding at home. They'll work more on running and debugging within the cloud environment. And finally, they'll do a &lt;code&gt;git pull&lt;/code&gt; to grab some python &lt;em&gt;web app&lt;/em&gt; code we have ready for them to test.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python!" src="https://www.python.org/static/community_logos/python-logo-master-v3-TM.png"&gt;&lt;/p&gt;
&lt;h2&gt;Out of Desk&lt;/h2&gt;
&lt;p&gt;This time, it is up to the students to explain to us all the different sites we use in the cloud and how they fit together. Where is GitHub? Where is Cloud9? Where is the chromebook? We can use this as an opportunity to introduce the concept of a computer process so we can talk a bit more specifically about each process and where that process is running (&lt;em&gt;locally&lt;/em&gt; on their chromebook, in the cloud in AWS or in the cloud on GitHub).&lt;/p&gt;
&lt;h2&gt;Hands-On/coding&lt;/h2&gt;
&lt;p&gt;Students will follow along while we create another Python file, edit it and run it. We'll review some basic Python terms and syntax: literals, expressions and statements. We'll review code blocks and how they are delineated in Python. Then we'll review conditions, conditional blocks as well as functions and function definition blocks.&lt;/p&gt;
&lt;h2&gt;One thing to remember&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Python is great!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;For Day 9 setup, they'll need to get back on their Cloud9 environment and &lt;em&gt;pull&lt;/em&gt; from the MyFirstWebstie repo to make sure they are in sync.&lt;/p&gt;
&lt;h2&gt;Actual&lt;/h2&gt;
&lt;p&gt;Overall it went pretty well -- our biggest slow down still is getting everyone signed in. Cloud9 and really any IDE has been a little bit overwhelming for kids with all the buttons and options. So we have tried to focus on the File Manager to the left, the Terminal along the bottom, and the text editor in the middle. &lt;/p&gt;
&lt;p&gt;We are not concerned though! I think thatthey will all feel much more comfortable in Cloud9 with practice and we can start really focusing on the code. The process is a bit distracting right now, and not as fun. But once they get it down, it's EZ PZ. We will all just use the same password for now though to limit difficulty on that front.&lt;/p&gt;
&lt;h1&gt;Closing&lt;/h1&gt;
&lt;p&gt;This has been a great session and the kids are using real-world tools and a real-world programming language. They are now armed with the tooling and basic skills to tackle a project. And working on a project is exactly what they need to apply these new skills -- getting lots of practice in this "cloud coding" environment so it becomes as easy as playing Fortnite.&lt;/p&gt;</content><category term="computer science"></category><category term="coding"></category><category term="github"></category></entry><entry><title>WEMS Coding Winter 2019 Daily Summaries</title><link href="/wems-coding-winter-2019-daily-summaries.html" rel="alternate"></link><published>2019-01-26T00:00:00-05:00</published><updated>2019-01-26T00:00:00-05:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2019-01-26:/wems-coding-winter-2019-daily-summaries.html</id><summary type="html">&lt;p&gt;WEMS Coding Diary&lt;/p&gt;</summary><content type="html">&lt;h1&gt;WEMS Coding Winter 2019 - Weekly Summary&lt;/h1&gt;
&lt;h2&gt;Day 1 (12/06/2018)&lt;/h2&gt;
&lt;p&gt;For the last couple weeks the kids have wanted to do more iPads, surprising right? We have done &lt;a href="http://lightbot.com"&gt;Lightbot&lt;/a&gt; in the past, but haven't ever heavily focused on the last levels, and the concepts because it takes a while to get through all the levels, and reach these levels. The game probably has over forty levels total. One of the first things we had to make sure the kids understood was Procedures and re-usable code. Lightbot allows you to use Procedure 1 and Procedure 2 as a block of code that can be re-used in (&lt;em&gt;called&lt;/em&gt; by) your &lt;em&gt;main&lt;/em&gt; program. Later in the game we start messing around with using our Procedure 1, as a supporting block of code.&lt;/p&gt;
&lt;h2&gt;Day 2 (12/13/2018)&lt;/h2&gt;
&lt;p&gt;We continued to work on understanding and using Procedures. The cool thing is that when you create a procedure, it might be different from the one your classmate used to beat the level. There can be different ways that you arrange the instructions to complete the level. We also practiced using loops within our procedures to make our programs smaller and more efficient.&lt;/p&gt;
&lt;h2&gt;Day 3 (01/03/2019)&lt;/h2&gt;
&lt;p&gt;This was the last week we played with Lightbot. We did a little refreshing when we got back from break and made sure that we had procedures and loops down. There is another app called CargoBot that is very similar, but pretty much requires you to use &lt;em&gt;prodecures&lt;/em&gt; and &lt;em&gt;loops&lt;/em&gt; at every level. We also learned about a concept called &lt;em&gt;mutual recursion&lt;/em&gt; -- when Procedure1 calls Procedure2 and then Procedure2 calls Procedure1. That was interesting!&lt;/p&gt;
&lt;h2&gt;Day 4 (01/10/2019)&lt;/h2&gt;
&lt;p&gt;Even the tutorial and beginner levels for Cargobot are pretty intense. They really require you to break down the whole operation and split it into different procedures. You have around five Procedures for each level to use, compared to LightBots two. This is where we really learned to practice our problem-solving, and perserverance. Many times when we would start working on a level, we would get a little bit through and figure out that there was actually a better way to solve it and start over. This happens in Lightbot but not in such an impactful way. Cargobot forces you to look at the level, break it down into pieces, and then seperate those pieces into re-usable blocks of code that go into your various Procedures.&lt;/p&gt;
&lt;h2&gt;Day 5 (01/17/2019)&lt;/h2&gt;
&lt;p&gt;Some of the kids at the end of last class who were getting frustrated with Cargobot and started working on Hopscotch. This is the next app we transition to in our objective to teach programming and comes right before the actual typing programming languages. Hopscotch is still a drag and drop visual programming app, but within those drag and drop &lt;em&gt;Rules&lt;/em&gt; as Hopscotch calls them, there are parameters that need to be typed in. We all started on Hopscotch this class and built the basic skelton for a &lt;em&gt;Crossy Road&lt;/em&gt; or what used to be called Frogger!!! We started by programming our up arrow, left arrow, and right arrow to move around our character. Then we programmed two cars that were on a &lt;em&gt;repeat forever loop&lt;/em&gt; to go back and forth in the middle of the screen as our obstacles. And finally we learned about a collision event and programmed the character to restart at the starting point when it collided with either of the cars going back and forth. This was a lot of fun, allowing the kids to add in some personal touch along the way unlike the last two apps had.&lt;/p&gt;
&lt;h2&gt;Day 6 (01/24/2019)&lt;/h2&gt;
&lt;p&gt;We started our adventure through Github and typing on the laptops! We started off going over Github, and talking about how it works, and why we would need to use it. Once everyone was set up on their laptops, we looked through the repository at the different files there. We edited the index.html file which will be our home page for the website, and also looked at our personal pages. The kids should be starting to understand the concept of commiting a change, and that change is now reflected as the most recent version of the file. Including the conflicts that would arise if we all tried to edit, and commit changes at the same time!!!&lt;/p&gt;</content><category term="computer science"></category><category term="coding"></category><category term="github"></category><category term="aws"></category><category term="cloud9"></category></entry><entry><title>WEMS Coding Winter 2019 Day 6</title><link href="/wems-coding-winter-2019-day-6.html" rel="alternate"></link><published>2019-01-26T00:00:00-05:00</published><updated>2019-01-26T00:00:00-05:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2019-01-26:/wems-coding-winter-2019-day-6.html</id><summary type="html">&lt;p&gt;WEMS Coding Day 6&lt;/p&gt;</summary><content type="html">&lt;h1&gt;WEMS Coding: Kids &amp;amp; Github&lt;/h1&gt;
&lt;p&gt;For class today our goal was to become comfortable with Github and version control. Our first objective -- log into Github. After a couple minutes of "Mr. Chris, wrong password", and me responding with try again, try again. It clicked that something was off, "Oh yeah, sorry. Github required me to use a numeral so the password has a number at the end of it." Finally, we were in, well almost. One laptop logged in, the others all said "Please wait some time, your account was accessed with the wrong password repeatedly, and is now locked." Thinking there is no way we can all do this with just one laptop, let's switch it up. Off to the carpet, or as H. corrected me, "The Multi-Purpose Area" to go over version control in a more visual, engaging way. I handed everyone a piece of paper, and a folder. The paper had some code on it, the couple lines of HTML we were going to be playing around with. The folder was just a normal folder, nothing fancy. I asked L. to play the role of my repository, and she held a folder that said &lt;em&gt;MyFirstWebsite&lt;/em&gt;, this is where we all would commit, and push our code! Next to L., sat a folder that had written on it &lt;em&gt;Github.&lt;/em&gt; I explained how when someone wants to submit code to the folder, or repository, they would code it all up, write on the folder what it contained, or our &lt;em&gt;commit message&lt;/em&gt;, and then push it up to Github. The folder would fly through the air and land on the Github folder, and I would explain that at the Github folder it would &lt;em&gt;ask&lt;/em&gt; Github, "Hey, I got this code, and it's suppose to go to this folder called MyFirstWebsite, will you show me the way?" And with that, the folder was then moved over to folder L. was holding, and now put inside L.'s folder. And I explain that is how we would submit code, And by doing that, the version of the code had now changed, to the newer version. We went kid by kid, each adding the piece of paper to their folder, writing a description on the folder, and then the folder flying to meet Github, and then Github sending it to the &lt;em&gt;MyFirstWebsite&lt;/em&gt; folder that L. was holding. When we had done all the students, I laid all the folders down on the ground, one in front of the other. This allowed the kids to see the history tree that the code had gone through, starting at one version, and now being on the final version that we just submitted to the repository.&lt;/p&gt;
&lt;p&gt;I have got to say, I'm pretty happy that Github locked us out for a bit and we went over to the &lt;em&gt;Multi-Purpose Area&lt;/em&gt; to act out the whole process. Because the kids totally were starting to understand what was going on. We have one folder, or repository, that all of us are submitting code too, and working on together. Back to the table, and on the laptops we go.&lt;/p&gt;
&lt;p&gt;In groups of two the kids log in, with the right password this time, and the Github gates open, we are in! I tell them to go over to the left side of the screen, and they will see the folder we are looking for, &lt;em&gt;MyFirstWebsite&lt;/em&gt;. We all click on it, and then navigate to the folder inside named docs. In there we have a list of HTML files, one for each student, and one called &lt;em&gt;index.&lt;/em&gt; I let all the kids know that we are going to be building a website for WEMS, kind of like an information page. We all navigate to the index file and look over it. It has a heading, and a list of about 5 questions with blanks. I tell the first group, you will fill in the first question, and commit your work, and the second group, you will fill in the second question, and submit your work, and so on. And it was at this time that the truely remarkable happened. They all knew they had this one document, that they all would work on together, but on different laptops. J. starts, and fills in the first blank, writes his commit message, and clicks the green button. He is stoked when the site reloads and he sees his work has been written in stone, it is now official. L. and R. are next, they have two blanks they need to take care of in their sentence. They start working on the first blank, the underscores make it tricky, and after a couple minutes J. pipes up and says "Wait, I can just edit that on mine. I'll do it." So he does, filling in the first blank with the word snack. And submits it. I notice that the word isn't suppose to be snack, it's suppose to be snake. The sentence was, "Our class pet is a [blank] and his name is [blank]. Currently in the repository, after the last commit, "Our class pet is a snack, and his name is Candycane." L. and R. had refreshed after J.'s commit, and added Candycane, the name of the class pet snake. When we see this, everyone starts laughing. H/ speaks up and says he can fix it, and goes to change snack to snake. L. and I. filled in the last two questions, and we all submitted. We all refresh, and there are the new changes! We had a couple conflicts, but I told the kids they just needed to refresh, grab the latest version, and they could go and add their changes and commit. I think one of the best parts was when one of the students said "I commited it!" We moved over to our personal HTML files so that we didn't cause conflict drama, and worked on adding some things about ourselves, writing our commit messaging, and clicking the big green commit button. The kids loved seeing the file be updated, it was now an official change to the document, that they had made, they had a commit with their name on it!&lt;/p&gt;
&lt;p&gt;This whole process of version control, and Github, and Git, command line vs. using the Web UI, or desktop app can be so overwhelming. I really didn't know what to expect, but I just keep going with it, and repeating myself to try to explain it in a slightly different way. I think what really helped was acting it out visually on the carpet. They could really see that they were adding code to the repository in the way that they would put their piece of paper in the folder, write their commit message on it, and push it up to Github. Were it would finally end up in the &lt;em&gt;MyFirstWebsite&lt;/em&gt; folder, and now be updated with their changes. They started to understand how we were making a history of all the changes to the file, and that if we had too, we could just revert back to a commit before if we had made a mistake, like a spelling error. Or, we could fix it on our laptop, and then do &lt;em&gt;another&lt;/em&gt; commit that would update the software, and fix the error. My goal was for them to understand the basic idea of version control, and pick up some of the vocabulary words like commit, commit message, push. And I think seeing it in person, with the folders, and then moving to the laptops and doing it for real, having them all make changes to the same file, at the same time really helped to connect the dots. To start next class we will go over our new text editor we will be using, and then clone the class repository. We were around 23 commits I think when we ended, I know that this will become a competition and we will probably have to see how high we can get that number. I wouldn't be surprised if we break 100 commits next Thursday, and from there onto a 1000!&lt;/p&gt;
&lt;p&gt;You can go check out our simple little site at &lt;a href="http://wems.techemstudios.com"&gt;http://wems.techemstudios.com&lt;/a&gt;! Check back each week to see how we have changed it, and what has been added.&lt;/p&gt;</content><category term="computer science"></category><category term="coding"></category><category term="github"></category><category term="aws"></category><category term="cloud9"></category></entry><entry><title>Slack</title><link href="/slack.html" rel="alternate"></link><published>2016-11-08T00:00:00-05:00</published><updated>2016-11-08T00:00:00-05:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2016-11-08:/slack.html</id><summary type="html">&lt;h3&gt;Why Slack?&lt;/h3&gt;
&lt;p&gt;Slack has come onto the scene in the last couple years as a way for groups of people to communicate, in a chat room like setting. What makes Slack stand out from similar pieces of software is it's ease of use, and simplicity. At Tech 'Em Studios we …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Why Slack?&lt;/h3&gt;
&lt;p&gt;Slack has come onto the scene in the last couple years as a way for groups of people to communicate, in a chat room like setting. What makes Slack stand out from similar pieces of software is it's ease of use, and simplicity. At Tech 'Em Studios we use Slack to talk amongst each other, and share ideas. The real fun with Slack comes when you
dive into all of it's features, and the many different types of textual bots you can have feeding your Slack channel with information.  &lt;/p&gt;
&lt;p&gt;Our goal with using Slack with the students is firstly to be able to allow them to ask questions to the instructors when they aren't in class. But also as part of an activity
that involves using the Python programming language to create, and program your own Slack bot! With the knowledge that the students learn from class they will be able to commit changes to the class bot, and make it talk back depending on what is said to it. We like this activity because it's fun, as well as gets the kids thinking about artificial intelligence! My plan for this blog post is to talk about getting signed up, joining Slack, and bit more about it features.  &lt;/p&gt;
&lt;h3&gt;Signing up&lt;/h3&gt;
&lt;p&gt;In order to get signed up with the Tech 'Em Student's Slack channel you will need to provide us with your  email either in class, or by sending us an email at &lt;a href="mailto:info@techemstudios.com"&gt;info@techemstudios.com&lt;/a&gt;. If your child doesn't have an email, I suggest creating one via Gmail, or having them use yours. Email is simply needed to sign up for Slack, and as a method of resetting, or recovering your password.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Email Inbox" src="images/slack-gmail2.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;You will receive the invitation in your inbox. By click the big green button you will start the registration process. Things that has been &lt;strong&gt;underlined in red&lt;/strong&gt; is the identifying parts for you to be able to verify you have received the correct invitation, and your child will be joining a Slack channel controlled, and administered by Tech 'Em Studios.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;, you will be invited by either Joe Seiler, Chris Kefalas, or Wray Mills. If one of those names isn't listed, you know someones 'a phishing!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Email" src="images/slack-invite3.jpg"&gt;    &lt;/p&gt;
&lt;p&gt;If you have any other questions about getting signed up, please don't hesitate to reach out to us at &lt;a href="mailto:info@techemstudios.com"&gt;info@techemstudios.com&lt;/a&gt;    &lt;/p&gt;
&lt;h3&gt;Joining Slack&lt;/h3&gt;
&lt;p&gt;After you have click the big green button you will be prompted to type in your name, and choose a username. This user name can be anything, granted it is appropriate, and within Slack's guidelines for user name creation.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="create" src="images/slack-create1.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;You will than be prompted to create a password for your account. We always recommend using a Great password!    &lt;/p&gt;
&lt;p&gt;&lt;img alt="password" src="images/slack-password4.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;The next screen you will see will look like the one below. It will offer to walk you through a tutorial of how Slack works, and is set up. It's super quick and gives you a basic idea of the layout.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="tutorial" src="images/slack-tut6.jpg"&gt;  &lt;/p&gt;
&lt;h3&gt;Slacking?&lt;/h3&gt;
&lt;p&gt;Slack is set up as a system of chat rooms known as channels that are always prefixed with a octothorpe (#). Everyone is automatically joined into the channel known as #general. Currently we have configured Slack so that all our students are in #general, and can read, and write. The purpose of #general is for dialogue between everyone, as well as relaying the latest messages from Tech 'Em Studio headquarters! From there we have created private channels named after each class that only the particular students in that class can join. The goal with the private channels is to allow each class to interact with their bot, as well as let them talk amongst themselves. We hope that by creating these class channels the students will be able to better interact with other students, and help each other out.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Slack" src="images/slack-slack-5.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;The channels you see on the side will be different depending on what class the student is in. Everyone though is automatically joined into #general, and #random, and their respective class channels as well.  &lt;/p&gt;
&lt;p&gt;Students can also create private messages with other students that are part of the Slack channel.  &lt;/p&gt;
&lt;p&gt;Slack is available for Windows, macOS, and Linux operating systems. As well as Android, iOS, and you can even use Slack in a web browser by navigating to https://techemstudents.slack.com.  &lt;/p&gt;
&lt;h3&gt;Slack bot&lt;/h3&gt;
&lt;p&gt;Just as much as the Slack craze has been sweeping the nation, the Slack &lt;em&gt;bot&lt;/em&gt; craze has been steadily gaining traction. A Slack bot is a textual bot that can be programmed to provide a certain function. People have created hundreds of these bots to do anything you can think of! Taco Bell even has one called &lt;a href="https://www.tacobell.com/feed/tacobot"&gt;Taco Bot&lt;/a&gt; that lets you order tacos straight from Slack!  &lt;/p&gt;
&lt;p&gt;The main ones you will see hanging out in our channel are Twitter bot, Github bot, Travis bot, and our work in progress #general Python bot. Some bots you can interact with via typing in certain commands. Other bots will just feed information into your channel based on certain circumstances. For instance, whenever we post a tweet to our Twitter account, it will relay that message into the Slack channel for everyone to see. In a similar manner, the Github bot will post a message whenever someone has made a new commit to the repo!  &lt;/p&gt;
&lt;p&gt;The students will be working with the Python programming language to create their own Slack bots! Either for their own use, and experimentations, or as a general bot to hang out in their class channel. They will than be able to program that bot to respond to certain commands with just text, or make a query to a certain data set online. It really is a lot of fun, and the possibilities are endless when thinking of different ways you can interact with the bot.  &lt;/p&gt;
&lt;p&gt;These bots can either be ran on a Raspberry Pi, your PC, or even in the cloud! Slack is a free service up until a certain amount of users. So at the end of the session, students can create their own Slack channels, and start crafting their own bots to hang out in their channels!  &lt;/p&gt;
&lt;h3&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;Slack is awesome, and personally is the only thing I can see replacing e-mail one day. We are hoping that by using Slack, and allowing students to communicate amongst themselves, as well as with teachers outside of the classroom will really help to make all of the classes feel more seamless. Slack is a great way to open the discussion about problems students are having with assignments, and for teachers to provide live help to walk them through issues that might arise. A lot of our classes we only get to spend one hour a week with the students. But with Slack it extends that, and allows them to reach out for help anytime during the week!  &lt;/p&gt;
&lt;p&gt;Let us know if you have any questions by emailing us at &lt;a href="info@techemstudios.com"&gt;info@techemstudios.com&lt;/a&gt; please.  &lt;/p&gt;
&lt;p&gt;Ready to sign up for GitHub? Check out the blog about &lt;a href="http://blog.techemstudios.com/github-part-one.html"&gt;GitHub&lt;/a&gt;  &lt;/p&gt;</content><category term="slack"></category><category term="github"></category><category term="python"></category><category term="coding"></category><category term="code em"></category><category term="homeschool"></category><category term="create em"></category><category term="game em"></category></entry><entry><title>Create Em Fall 2016</title><link href="/create-em-fall-2016.html" rel="alternate"></link><published>2016-10-21T00:00:00-04:00</published><updated>2016-10-21T00:00:00-04:00</updated><author><name>Davis Mohar</name></author><id>tag:None,2016-10-21:/create-em-fall-2016.html</id><summary type="html">&lt;h3&gt;Day One&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;9/14/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Intro to Raspberry Pi&lt;/h4&gt;
&lt;p&gt;Create Em started out with discussions on objectives, or desired projects. Since the Raspberry Pi is so versatile, allows for easy manipulation, and provides a mecca for machine learning, we will be completing a slew of projects with this device.  &lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Day One&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;9/14/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Intro to Raspberry Pi&lt;/h4&gt;
&lt;p&gt;Create Em started out with discussions on objectives, or desired projects. Since the Raspberry Pi is so versatile, allows for easy manipulation, and provides a mecca for machine learning, we will be completing a slew of projects with this device.  &lt;/p&gt;
&lt;p&gt;The Raspberry Pi is essentially a mini computer (pocket-sized). It is a device for non-experienced and experienced programmers alike. By working through projects associated with the pi, its user can learn programming in a hands-on/interactive way. The pi's introduction started with an activity on all of its parts that come with it and what those parts do. For this class we are using the Raspberry Pi 3 model B. The pi is a single board computer with all the components on one board. The point was made that these components are very similar to traditional computers and cell phones, just on a smaller scale.  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Morse Code History Lesson  and Puzzle Decoding&lt;/h4&gt;
&lt;p&gt;Morse code is a type of code that is used to send telegraphic information using rhythm. Morse code uses dots and dashes to show the alphabet letters, numbers, punctuation and special characters of a given message. When messages are sent by Morse code, dots are short beeps or clicks or flashes, and dashes are longer ones.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="morse alpha" src="images/morse-code-alphabet.jpg"&gt; &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;  &lt;/p&gt;
&lt;p&gt;Morse code is named after Samuel Morse, who helped invent it. Teletypewriters were invented in the early 20th century with their own codes and gradually replaced Morse code. Other types of technology that are easier to use for communication became even more common. Though it is not widely used, Morse code is still used to communicate on some amateur radios.  &lt;/p&gt;
&lt;p&gt;We learned how to encode and decode morse code, first with a pencil and paper, then by writing programs in Python on the pi; being able to decode it through text or by sound! Here is a setup with the pi connected to a breadboard (easily manipulated tool for conveying circuits) and a speaker. By connecting two jumper wires and a button on the breadboard, students wrote programs in Python to relay messages in morse through the speaker!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="morse sound" src="images/morse-pi-setup.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Here is a fun morse code translator on the &lt;a href="http://morsecode.scphillips.com/translator.html"&gt;SCPhillips&lt;/a&gt; site.  &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Day Two&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;9/21/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Binary&lt;/h4&gt;
&lt;h5&gt;more on cryptography&lt;/h5&gt;
&lt;p&gt;We reviewed what we learned of Morse code last week and how it relates to binary i.e Encoding, and decoding. Think of Binary, 0's and 1's, as the language computers 'speak'. When you break a computer down, it is basically a whole lot of 1010101011000's. Something needs to decode this into text so that humans can easily read and understand it. Sure, "only real programmers code in binary", but that would make learning programming a little off-putting!  &lt;/p&gt;
&lt;p&gt;There are plenty of ways to learn the Binary Number system, a base two number system. In other words, this number system uses two digits: one and zero. The number system we are most familiar with, the Decimal Number system, a base ten number system. So, this system uses ten digits: 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9. Students were introduced to binary by learning binary magic tricks, a binary 'piano', and binary flashcards.&lt;/p&gt;
&lt;p&gt;Below is an example of the number 21 (in the decimal number system) and 10101 (in the binary number system) using binary flashcards and a binary piano:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="binary 21" src="images/binary-cards-piano.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Day Three&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;9/28/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Cryptography&lt;/h4&gt;
&lt;p&gt;A formal definition from wiki of Cryptography: the art of witting or solving code. &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; To dive into what this means, we used a Caesarian cipher, where the letter place is moved by three. This is a great tool to help understand the important concept of abstraction in computer science. Encoding and decoding this caesarian cipher exercises skills in abstract thinking where you use a symbol to represent something. &lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup id="fnref:4"&gt;&lt;a class="footnote-ref" href="#fn:4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;  &lt;/p&gt;
&lt;p&gt;Here is an example bit of code we wrote using the Pythonista app:&lt;/p&gt;
&lt;p&gt;&lt;img alt="crypto" src="images/cryptography.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;Here is a link to Instructor, Davis' &lt;a href="https://github.com/davismohar/CesarCipher"&gt;GitHub&lt;/a&gt; with a little more on the python program file.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Day Four&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;10/05/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;The Game of Life&lt;/h4&gt;
&lt;p&gt;The game of life is a cellular automaton devised by the British mathematician John Horton Conway in 1970. The "game" is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input. One interacts with the Game of Life by creating an initial configuration and observing how it evolves, or, for advanced "players", by creating patterns with particular properties. &lt;sup id="fnref:5"&gt;&lt;a class="footnote-ref" href="#fn:5" rel="footnote"&gt;5&lt;/a&gt;&lt;/sup&gt; -Just dipping our feet in artificial intelligence. We are always trying to get computers to become as intelligent as humans. Apple's Siri and Amazon's Alexa a couple examples of our attempts.  &lt;/p&gt;
&lt;p&gt;The game of life is 'turing-complete', which means that technically, anything that could be computed, could be computed using the game of life.  &lt;/p&gt;
&lt;p&gt;An example on the Tech Em whiteboard of the Game of Life:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="gameoflife" src="images/game-of-life.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Day Five&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;10/12/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Artificial Intelligence and The Turing test&lt;/h4&gt;
&lt;p&gt;Intelligence and computers are not exactly related. On the other hand, computation and computers do. Humans have been working for a long time at bridging the gap between intelligence and computers. You are probably familiar with that work by using Apple's "Siri", Microsoft's "Cortana", or Amazon's "Alexa". Though, if you have used these devices, you've probably noticed that each one can get a lot of things wrong, or cannot perform every action you want it to. So, you can see we still have some ways to go with bringing intelligence to the "minds" of computers. Artificial Intelligence (the field), "is the study of computer systems that attempt to model and apply the intelligence of the human mind." &lt;sup id="fnref:7"&gt;&lt;a class="footnote-ref" href="#fn:7" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt;    &lt;/p&gt;
&lt;p&gt;A British mathematician, Alan Turing is famous for inventing the mathematical model, the &lt;a href="http://www.aturingmachine.com/"&gt;Turing Machine&lt;/a&gt; (no matter the complexity, a machine that can calculate anything that is computable) in 1936. Turing asked the important question: "Can machines think?". According to him, we eventually will be able to make a computer that thinks! &lt;sup id="fnref2:7"&gt;&lt;a class="footnote-ref" href="#fn:7" rel="footnote"&gt;7&lt;/a&gt;&lt;/sup&gt; To see if we've reached that point, we have the &lt;a href="https://en.wikipedia.org/wiki/Turing_test"&gt;Turing Test&lt;/a&gt;. This is a test to determine whether a computer is in fact, intelligent. It is a test to figure out whether a person can be fooled by a computer, into thinking the computer is another person (not a computer). &lt;sup id="fnref:6"&gt;&lt;a class="footnote-ref" href="#fn:6" rel="footnote"&gt;6&lt;/a&gt;&lt;/sup&gt; After ending the discussion we completed a simple &lt;a href="http://csunplugged.org/wp-content/uploads/2014/12/unplugged-20-the_turing_test_0.pdf"&gt;Turing Test activity&lt;/a&gt; to see if the computer can fool us into thinking it is a human.  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;The Future of Computing&lt;/h4&gt;
&lt;p&gt;"What can Watson do for you?" Artificial intelligence talks continued with learning what &lt;a href="http://www.ibm.com/watson/what-is-watson.html"&gt;Watson&lt;/a&gt; is, pretty much a cognitive assistant. In other words, a machine to help humans make decisions and take action. So, it helps to increase a person's potential. Powerful stuff! It is not only essential to learn where computer science has started to where we are now, but to learn where we are headed. Learning about this, will help prepare us for using &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; to run code on Amazon's "Alexa" without the use of your own server.  &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Day Six&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;10/12/2016&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;Soldering &amp;amp; LED Pendant&lt;/h4&gt;
&lt;p&gt;We are going to put together and code a Gemma microcontroller from Adafruit, an 8x8 LED matrix display. We'll use binary numbers, soldering techniques, and patience! Here are some tips from Wray about &lt;a href="http://blog.techemstudios.com/category/hardware.html"&gt;soldering&lt;/a&gt; and more detailed information on the &lt;a href="http://blog.techemstudios.com/led-pendant-follow-up.html"&gt;LED pendant project&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;Next week, we'll put together a TV-B-Gone Kit by using soldering skills we learned from this class.  &lt;/p&gt;
&lt;hr&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;https://offgridweb.com/survival/morse-code-why-you-should-learn-it/&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Cryptography&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;http://rumkin.com/tools/cipher/caesar.php&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" rev="footnote" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4"&gt;
&lt;p&gt;Zelle, John M. Python Programming: An Introduction to Computer Science. 2nd ed. Wilsonville: Franklin, Beedle &amp;amp; Associates Incorporated, 2010. Print.&amp;#160;&lt;a class="footnote-backref" href="#fnref:4" rev="footnote" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:5"&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&amp;#160;&lt;a class="footnote-backref" href="#fnref:5" rev="footnote" title="Jump back to footnote 5 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:6"&gt;
&lt;p&gt;http://csunplugged.org/the-turing-test/&amp;#160;&lt;a class="footnote-backref" href="#fnref:6" rev="footnote" title="Jump back to footnote 6 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:7"&gt;
&lt;p&gt;Dale, Nell, and John Lewis. "Artificial Intelligence/The Turing Test." Computer Science Illuminated. 4th ed. Sudbury, MA: Jones and Bartlett, 2011. 426-27. Print.&amp;#160;&lt;a class="footnote-backref" href="#fnref:7" rev="footnote" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;a class="footnote-backref" href="#fnref2:7" rev="footnote" title="Jump back to footnote 7 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="raspberry pi"></category><category term="create"></category><category term="coding"></category><category term="github"></category><category term="slack"></category></entry><entry><title>Computer Security</title><link href="/computer-security.html" rel="alternate"></link><published>2016-07-22T00:00:00-04:00</published><updated>2016-07-22T00:00:00-04:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2016-07-22:/computer-security.html</id><summary type="html">&lt;p&gt;Extra Security Post&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Computer Safety&lt;/h3&gt;
&lt;p&gt;On Wednesday after we had gotten everything hooked up, and our Windows installation completed I wanted to take some time to talk to the kids about the importance of computer,  and Internet safety.  We live in an exciting age with the Internet of Things, but with the excitement comes some risk. While it's great having all of these devices online, it makes the attack surface for malicious actors much larger. There is good news though! We can all take steps to greatly reduce our risk of falling victim to scams, viruses, and annoying adware. My goal with this post is to detail what I went over in the presentation, and also provide direct links to the software I recommend on keeping yourself safe online. &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;The Threat is Real&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Over &lt;strong&gt;169 million personal records&lt;/strong&gt; were exposed in 2015, stemming from 781 publicized breaches across the financial, business, education, government and healthcare sectors. &lt;a href="http://www.idtheftcenter.org/ITRC-Surveys-Studies/2015databreaches.html"&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In 2015, there were &lt;strong&gt;38 percent&lt;/strong&gt; more security incidents detected than in 2014.&lt;a href="http://www.pwc.com/gx/en/issues/cyber-security/information-security-survey.html"&gt;[2]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;34.2%&lt;/strong&gt; of user computers were subjected to at least one web attack over the year.&lt;a href="https://securelist.com/analysis/kaspersky-security-bulletin/73038/kaspersky-security-bulletin-2015-overall-statistics-for-2015/"&gt;[3]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are plenty of malicious actors out there, from all across the globe. It can be very hard to prosecute, and find these people because of international laws, but also because they usually take good care in making sure what they do is untraceable back to them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am convinced that there are only two types of companies: those that have been hacked and those that will be. And even they are converging into one category: companies that have been hacked and will be hacked again.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Robert S. Mueller, III, FBI Director, 2012 &lt;a href="https://archives.fbi.gov/archives/news/speeches/combating-threats-in-the-cyber-world-outsmarting-terrorists-hackers-and-spies"&gt;[4]&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can't protect ourselves from everything, and we are helpless when a company gets hacked. But we can take many steps to help protect ourselves from making it any easier for an attacker to get our information, or infect our computer with malicious software. &lt;/p&gt;
&lt;p&gt;Focus Points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strong Passwords &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anti-Virus&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Adware &amp;amp; Spyware detection&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Protecting Yourself Online&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By looking into these areas, and being aware of what you are doing on the computer you will be ahead of the game, and able to detect, and know what to do if something ever happens!&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Strong Passwords&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Strong Passwords" src="http://imgur.com/rMagpJb.jpg"&gt;&lt;/p&gt;
&lt;p&gt;We all love a nice, easy, quick password to type in. Something that isn't hard to remember. Guess who else loves those passwords?! Those dudes trying to get your bank account number! The password is going to be your first defense, especially with your online accounts. By creating a strong password you are making it harder for an attacker to guess that password. One of the most popular attacks towards someones password is using a Brute Force attack where they use a dictionary to guess all the combinations of various words. So by creating a password that isn't found in a dictionary, you are a step ahead of the game in protecting yourself. You'll be best protected by using upper and lower case letters, numbers, and symbols in your password. Make sure to use a minimum of 12 characters when choosing a password, and if you are really worried never use the same password twice. Using a password manager like KeyPassX &lt;a href="https://www.keepassx.org"&gt;[5]&lt;/a&gt; or LastPass &lt;a href="https://lastpass.com"&gt;[6]&lt;/a&gt; can help you keep track of all these unique, and complicated passwords! &lt;/p&gt;
&lt;h3&gt;Anti-Virus&lt;/h3&gt;
&lt;p&gt;Viruses can definitely be a pain, and make your experience frustrating. Anti-Virus programs have evolved over the years, and we have seen many different companies market their latest and greatest. Thankfully for Windows users Microsoft has gotten on board and created &lt;strong&gt;Windows Defender&lt;/strong&gt;. This is a piece of software that comes installed on Windows 8, and Windows 10. Users running systems with versions of Windows pre Windows 8, you will look for &lt;strong&gt;Security Essentials&lt;/strong&gt; which is the same thing. Both of these pieces of software will be free, and included with Windows. &lt;/p&gt;
&lt;p&gt;If you're looking to add another layer of Anti-Virus, I would suggest looking into Anti-Virus Guard &lt;a href="http://www.avg.com/us-en/homepage"&gt;[7]&lt;/a&gt;, AVG for short. It is a free, anti-virus that will help catch anything that Windows Defender might miss. &lt;/p&gt;
&lt;p&gt;Apple users can use the OS X version of AVG to protect themselves from viruses. Apple computers tend to be targeted less because they are less prevalent in the computer population than Windows operating computers. But you still should be aware of the possibilities, and protect yourself. &lt;/p&gt;
&lt;p&gt;Both of these are going to be a good first line of defense from most of the main- stream virus that your computer has potential to catch. It's very important to make sure you keep these updated, and are using the latest virus definitions. If your computer does get a virus that you are having trouble removing, look through Google for anything related to that specific virus, or seek out professional assistance. &lt;/p&gt;
&lt;h3&gt;Adware, Spyware Detection&lt;/h3&gt;
&lt;p&gt;While these types of malicious software aren't going to kill you, they will definitely make your user experience annoying. &lt;strong&gt;Adware&lt;/strong&gt; is known as a type of software that installs and displays ads on the users screen. They work by hijacking the legitimate ads on websites, and display their own. Sometimes even displaying ads outside of the web browser. They usually come from clicking on malicious links, or from installing certain kinds of software that sneak them in. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whenever installing new software always make sure to read the check boxes! Sometimes those check boxes will ask you if you want to install some sketchy ad package! Their hope is that you won't read them, and click next next next! &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Spyware&lt;/strong&gt; is much more malicious. You can define spyware as any type of malicious software that is meant to spy on the user looking to gather login, and password information. They are looking to get into your email, and your bank accounts. Usually you will get spyware from clicking on malicious links, and downloading fake software that isn't the application you think it is. Always know the sites that you are on, and pay attention to the URL. &lt;/p&gt;
&lt;p&gt;Two pieces of software that I recommend to take care of this would be Malware Bytes&lt;a href="https://www.malwarebytes.com"&gt;[8]&lt;/a&gt;, and Super-Anti Spyware&lt;a href="http://superantispyware.com"&gt;[9]&lt;/a&gt;. Both have free versions that you can use to help remove these types of software, and help hopefully stop them before even have a chance! You need to make sure that you use the latest versions, and also before running scans, update your virus definitions. Updating your virus definitions can be done inside the application. If you don't want to have the application running all the time, I would suggest to try run it at least twice a month. It can never hurt, and will help to remove any junk that you might not even know you have! They can be sneaky! &lt;/p&gt;
&lt;h3&gt;Protecting Yourself Online&lt;/h3&gt;
&lt;p&gt;We do so much online these days! We do our banking, talk to friends, and family. We play video games, and video chat! And with Internet access available practically all over the globe, there are tons of people online, going to the same sites that we all use. Being safe online is a top priority for anyone wanting to protect their personal information, and avoid any types of identity theft. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can never over stress the importance of having a strong password. That is going to help you tremendously in avoiding someone being able to guess your password, and getting access to your account. &lt;/li&gt;
&lt;li&gt;Remember to use a combination of upper and lower case letters, numbers, and symbols. A minimum length of 12-14 characters is suggested. &lt;/li&gt;
&lt;li&gt;Don't use the same password for all your accounts, especially ones you are really trying to protect. This prevents them getting your password from one site, and than being able to compromise all your accounts. &lt;/li&gt;
&lt;li&gt;Use a password manager to help keep track of the different sites, and different passwords you create. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Two-Factor Authentication if you available. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never &lt;strong&gt;EVER&lt;/strong&gt; reveal any personally identifiable information to strangers online. There shouldn't ever been any reason to, and if someone is asking for that information there intentions should be questioned. Don't trust that just because someone has a Facebook, and pictures that they are who they say they are. You should always be cautious when talking with others online. By never revealing anything about yourself, and potentially using a pesudo first name you can keep yourself safe while navigating the web, and talking to others! &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If available for that site,  always use &lt;strong&gt;HTTPS!!!&lt;/strong&gt; HTTPS is a secure version of HTTP that will help to encrypt your traffic so if the attacker does get ahold of it, they shouldn't have any idea what it says! There are a couple plugins&lt;a href="https://www.eff.org/https-everywhere%20"&gt;[13]&lt;/a&gt; that will force your browser to use HTTPS if available. You can tell if you are using HTTPS when visiting a certain website by looking at the address bar up top and seeing a pad lock. Firefox and Google Chrome will display a green pad lock, and Safari will show gray pad lock. Also the URL will start with HTTPS instead of HTTP. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another good way to keep the malicious activity found on some websites at bay is the use of an AdBlocker. There are a couple different ones out there, but I would recommend uBlock&lt;a href="https://www.ublock.org"&gt;[11]&lt;/a&gt;, or AdBlockPlus&lt;a href="https://adblockplus.org"&gt;[10]&lt;/a&gt;. They both do the same thing, so choose either one. You don't need to install both of them. By using a piece of software like this you will be blocking ads, and reduce the chances of clicking on a malicious one. As well as be preventing some of the malicious scripts that hide on some websites. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;Phishing&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Phishing is something that I wanted to mention in this post because I feel that it is a very effective attack for attackers to gain access to peoples personal accounts. And over the years has become a more prevalent threat on the Internet. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Phishing" src="http://imgur.com/s3azhQU.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Phishing is the practice of sending fake emails that appear to look real, and come from reputable sources. Usually they will be like an email from your bank saying to please reset your password, with a link below that they want you to click. Usually they will even make the email format look exactly like how a legitimate one. But that is the point, to make you think it actually came from your bank! Some tips below for detecting phishing emails: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay very close attention to the senders email address. You can't always count on this to not be spoofed and appear to be actually from the bank, but most of the time you will see something like &lt;em&gt;bankofamerica.blah.silly@loserhacker.com&lt;/em&gt;. So while at first glance it might appear to be from Bank of America, looking a little closer we can see that it definitely didn't, and should be discarded.&lt;/li&gt;
&lt;li&gt;If the email is very vague about who specifically they are contacting that can raise some flags. For example if the message starts with "Hello TechEm, we are contacting to ..." versus just "Hello, we are contacting to ..."  This is important because attackers will send these phishing emails out en masse and usually don't know any information of the recipients. &lt;/li&gt;
&lt;li&gt;Also just look closely, and read the email before you jump to click on something in it. You might see something out of place, and easily figure out the email is fake. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end of the day if you are really worried that the email might be fake, just ignore it and call the company up directly. Than you can be assured that you aren't replying or clicking anything suspicious. They might even be able to tell you if they sent you an email recently so you know for sure! Better to be safe than sorry! &lt;/p&gt;
&lt;p&gt;If you want to read more about phishing, the Federal Trade Commission has written some good information&lt;a href="https://www.consumer.ftc.gov/articles/0003-phishing"&gt;[12]&lt;/a&gt; to help people learn about these types of attacks, and other tips on preventing them.&lt;/p&gt;
&lt;h3&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;Like mentioned in the beginning we can't always protect ourselves from every threat out there in cyber space. But we can reduce our chances, and make exploring the web much safer for ourselves. We can take steps to prevent sketchy software from installing and infecting our computers. We can use software to detect, and clean up anything that might have been installed under our nose. And we can use methods to make sure our passwords are strong, and our accounts are locked down. Setting up alerts for logins to your accounts is always useful, and using Two-Factor authentication whenever available is the ultimate thing for locking down an account, and keeping the bad guys out.  These are all things we already do every day like locking our houses, using a locked and fire proof filing cabinet or safe. It's just instead of calling you on the phone to scam you, or knocking on your door, they send you an email, or message you through Facebook. Some of the attacks have shifted, and gotten more technical but a lot is very similar to things we already work to protect ourselves against. It's just the attack surface has changed to the computer. So we have to evolve our techniques, and adjust our perspective of the possible avenues of attacks. Thankfully it's not close to impossible, and allows us to remain safe, and avoid having information compromised! &lt;/p&gt;
&lt;p&gt;I'm sure I've left something out! And I always suggest people to look for themselves, and read through a couple different sites to learn about computer safety, and security. These are the tips, and tricks I have been using to keep myself safe online, and should give you a little overview of where to start if you are interested in protecting yourself more, and different types of software to do so. Please don't hesitant if you have any questions to reach out, and email me. I love talking about computer security, and safety! &lt;/p&gt;
&lt;p&gt;Chris Kefalas
me@chriskefalas.me&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Links:&lt;/h4&gt;
&lt;p&gt;[1] "Identity Theft Resource Center Breach Report Hits Near Record High in 2015." ID Theft Center. January 26, 2016. Accessed July 21, 2016. http://www.idtheftcenter.org/ITRC-Surveys-Studies/2015databreaches.html.&lt;/p&gt;
&lt;p&gt;[2] "Global State of Information Security® Survey 2016." PwC. Accessed July 21, 2016. http://www.pwc.com/gx/en/issues/cyber-security/information-security-survey.html.&lt;/p&gt;
&lt;p&gt;[3] "Kaspersky Security Bulletin 2015." Secure List. December 15, 2015. Accessed July 21, 2016. https://securelist.com/analysis/kaspersky-security-bulletin/73038/kaspersky-security-bulletin-2015-overall-statistics-for-2015/.&lt;/p&gt;
&lt;p&gt;[4] "Combating Threats in the Cyber World: Outsmarting Terrorists, Hackers, and Spies." FBI. March 1, 2012. Accessed July 21, 2016. https://archives.fbi.gov/archives/news/speeches/combating-threats-in-the-cyber-world-outsmarting-terrorists-hackers-and-spies.&lt;/p&gt;
&lt;p&gt;[5] https://www.keepassx.org&lt;/p&gt;
&lt;p&gt;[6] https://lastpass.com&lt;/p&gt;
&lt;p&gt;[7] http://www.avg.com/us-en/homepage&lt;/p&gt;
&lt;p&gt;[8] https://www.malwarebytes.com&lt;/p&gt;
&lt;p&gt;[9] http://superantispyware.com&lt;/p&gt;
&lt;p&gt;[10] https://adblockplus.org&lt;/p&gt;
&lt;p&gt;[11] https://www.ublock.org&lt;/p&gt;
&lt;p&gt;[12] https://www.consumer.ftc.gov/articles/0003-phishing&lt;/p&gt;
&lt;p&gt;[13] https://www.eff.org/https-everywhere%20&lt;/p&gt;</content><category term="BYOC"></category><category term="Security"></category></entry></feed>