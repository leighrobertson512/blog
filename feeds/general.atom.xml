<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Art of Technology... Training - General</title><link href="/" rel="alternate"></link><link href="/feeds/general.atom.xml" rel="self"></link><id>/</id><updated>2018-07-10T00:00:00-04:00</updated><entry><title>Website Redesign Maggie 2018</title><link href="/website-redesign-maggie-2018.html" rel="alternate"></link><published>2018-07-10T00:00:00-04:00</published><updated>2018-07-10T00:00:00-04:00</updated><author><name>Maggie Liu</name></author><id>tag:None,2018-07-10:/website-redesign-maggie-2018.html</id><summary type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Our interns worked hard over the past couple of weeks to update and redesign Tech Em Studios’ website. To kickoff this redesign, it was all pens and paper; the interns worked to design what they wanted each page to look like on paper. With the plans for the redesign …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Our interns worked hard over the past couple of weeks to update and redesign Tech Em Studios’ website. To kickoff this redesign, it was all pens and paper; the interns worked to design what they wanted each page to look like on paper. With the plans for the redesign established, they went to work on the code (HTML, CSS, and JS). As a team, they worked using a forked github repo from our old website to make changes without affecting the live site. There were many bugs to fix as modifications were made, and the interns worked as a team to divide and conquer the tasks of the various pages. They worked using Slack to communicate and share resources. Below, our intern Maggie describes her experiences working on this project. We are excited to present our new and improved website!&lt;/p&gt;
&lt;h2&gt;Homepage&lt;/h2&gt;
&lt;p&gt;&lt;img alt="homepage" src="images/homepage.png"&gt;  &lt;/p&gt;
&lt;h1&gt;Mission Not-Quite-Impossible&lt;/h1&gt;
&lt;h2&gt;TOP SECRET – MISSION IMPOSSIBLE&lt;/h2&gt;
&lt;p&gt;Date: June 25th, 2018.&lt;/p&gt;
&lt;p&gt;Time: 0800.&lt;/p&gt;
&lt;p&gt;Subject: TOP SECRET – MISSION IMPOSSIBLE.&lt;/p&gt;
&lt;p&gt;From: TechEm Studios.&lt;/p&gt;
&lt;p&gt;To: Interns A, M, R, W.&lt;/p&gt;
&lt;p&gt;Greetings, all. You do not know me, and I do not know you, but you &lt;em&gt;must&lt;/em&gt; trust me. Our organization is sending you on a near-impossible mission. THIS IS NOT A DRILL, I REPEAT, THIS IS NOT A DRILL. It’s your first day here, and we do not expect you to be completely familiar with the mission structure, but on behalf of the organization, I thank you for taking up this enormous task.
You may find the details of the mission below. For now, I must sign off. There are a few miniature humans that I must take care of. Should you have any questions, feel free to send a messenger pigeon. Not a passenger pigeon; those are extinct.
Interns, I wish you all the best of luck. Farewell, and godspeed.&lt;/p&gt;
&lt;p&gt;Mission details: redesign the TechEm site, found &lt;a href="http://techemstudios.com/"&gt;here&lt;/a&gt;.
Missions basics: utilize HTML/CSS/Javascript skills in order to bring a new start to the dreaded TechEm website.
Mission difficulty: near impossible.&lt;/p&gt;
&lt;h2&gt;MISSION REPORT&lt;/h2&gt;
&lt;p&gt;Date: July 9th, 2018.&lt;/p&gt;
&lt;p&gt;Time. 1357.&lt;/p&gt;
&lt;p&gt;Subject: MISSION REPORT&lt;/p&gt;
&lt;p&gt;From: Intern M.&lt;/p&gt;
&lt;p&gt;To: TechEm Studios.&lt;/p&gt;
&lt;p&gt;Chief:
The mission has been completed. We interns have risen above the difficulty, and we now present to you the newest version of the site, found &lt;a href="http://techemstudios.com/"&gt;here&lt;/a&gt;. We didn’t know how much you expected, but we risked everything, hacking away through the night, in order to produce something that would satisfy you. You may be surprised to hear that we received help from an inside informant, Agent G, who was of the utmost help and greatly augmented our chance of success.
But we’re not here to talk about that. Below, I have attached three documents on the mission, each detailing a different part of the experience. Chief, I have not slept in three days. Please forgive me as I sign off.
-      Intern M&lt;/p&gt;
&lt;h3&gt;Document 1: Collaboration&lt;/h3&gt;
&lt;p&gt;At first, it seemed like we four interns were all the same: young, scared, and inexperienced. However, it quickly came to my attention that we all excelled in different fields and were passionate about different topics. Intern A, for instance, had never used HTML before but could learn in a single day. Intern R had been in contact with the language but needed a refresher, while Intern W was our go-to for questions on HTML, CSS, and Javascript. Meanwhile, I preferred to write the descriptors on the site. Even though we seemed a bit incomplete alone, we worked together and, through our amazing synergy, completed this impossible mission.
It would have been hard alone, and when we first started, it was. How could we all work on the same Github repository when Github doesn’t show who’s on and who’s not? How could we all work together when we didn’t even know each other? How, how, how? Well, as it turned out, we could simply tell each other that we were working on a page, and the others would not touch the page until it became free again. This was so Github did not cancel out anyone’s hard work. It also turned out that, while we still don’t know much about each other, we can still be friends and laugh together. What unusual friendships forged through trial and error.&lt;/p&gt;
&lt;h3&gt;Document 2: Issues&lt;/h3&gt;
&lt;p&gt;I would be lying if I said we ran into absolutely zero issues during this mission. In fact, we ran into &lt;em&gt;a lot&lt;/em&gt; of issues. It would take an entire day for me to finish. Some of the more memorable (read: death-defying) ones include: pictures, Javascript, and buttons.
Pictures, pictures, pictures. No website would be complete without pictures, but gosh darn are they hard to tame! Image after image, trial after trial. We manipulated CSS well into the night, as the clock ticked down, red and urgent. We hard-coded the images in, placed them exactly where we wanted them to be, and it all seemed fine – until we tested the mobile site.
The mobile site itself was an issue. How did something that looked so great on desktop look so bad on mobile? We added media query after media query (although I was not the one who did so), until at the end, the mobile site looked almost as good as the desktop version. &lt;em&gt;Almost&lt;/em&gt;.
Javascript. Ah, that one Java-like language that I should have learned but didn’t. Nope, I had nothing to do with the Javascript, but from what I remember, Agent G and Interns A and W worked on that relentlessly, rushing for time, yet trying so hard to maintain quality. I admire them, and in the end, everything worked out fine.
Now we come to the buttons. The dreaded, terrible buttons. I worked closely with these little monsters, and what I learned was that no one – &lt;em&gt;no one&lt;/em&gt; – could figure out the spacing. See, it was weird, we could space the homepage buttons perfectly, but the contact page buttons just would not obey. We stressed our hair out over it, but suddenly, miraculously, after we had left it off for a few days, it had been fixed! Mysterious benefactor, Intern M thanks you with all her heart.&lt;/p&gt;
&lt;h3&gt;Document 3: Learnt&lt;/h3&gt;
&lt;p&gt;I really want to say that I learnt HTML. Of course, being such a serious organization, I’m sure I would get yelled at for that. I must have learned something other than HTML during these days, but what? Is my memory really so bad that I cannot remember?
No, not yet. What did I learn? I learnt how to, first off, use ‘learnt’ and ‘learned’ interchangeably, but more so, I learnt how to open up.
When I first entered the company, I thought I knew nothing. I felt incompetent (and sometimes I still do), like everyone else knew more than me, was better than me. But I soon learned that we were all one of the same: young, scared, and inexperienced. We didn’t know more than each other; heck, we barely even &lt;em&gt;knew&lt;/em&gt; each other.
And so we came together, united in our know-nothing. We came together, one of the same, and we learned that, no matter who we were, we could do it. We grew together, learned together, fell down and got up together. We helped each other up from the fall, and in the end, we crossed the finish line together.
You said, Chief, that this was an impossible mission. We learned that it was not. It was entirely and completely possible, but we just had to learn how to make it so.
And so we did.&lt;/p&gt;</content><category term="computer science"></category><category term="coding"></category><category term="github"></category><category term="slack"></category><category term="technology"></category></entry><entry><title>Website Redesign Rishi 2018</title><link href="/website-redesign-rishi-2018.html" rel="alternate"></link><published>2018-07-10T00:00:00-04:00</published><updated>2018-07-10T00:00:00-04:00</updated><author><name>Rishi Patel</name></author><id>tag:None,2018-07-10:/website-redesign-rishi-2018.html</id><summary type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Our interns worked hard over the past couple of weeks to update and redesign Tech Em Studios’ website. To kickoff this redesign, it was all pens and paper; the interns worked to design what they wanted each page to look like on paper. With the plans for the redesign …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Our interns worked hard over the past couple of weeks to update and redesign Tech Em Studios’ website. To kickoff this redesign, it was all pens and paper; the interns worked to design what they wanted each page to look like on paper. With the plans for the redesign established, they went to work on the code (HTML, CSS, and JS). As a team, they worked using a forked github repo from our old website to make changes without affecting the live site. There were many bugs to fix as modifications were made, and the interns worked as a team to divide and conquer the tasks of the various pages. They worked using Slack to communicate and share resources. Below, our intern Rishi describes his experiences working on this project. We are excited to present our new and improved website!&lt;/p&gt;
&lt;h2&gt;Homepage&lt;/h2&gt;
&lt;p&gt;&lt;img alt="homepage" src="images/homepage.png"&gt;  &lt;/p&gt;
&lt;h2&gt;Website Redesign&lt;/h2&gt;
&lt;p&gt;“Anyone on main.css? What about classes.html? How do you implement a modal for the calendar?” These questions (and many more) became the basis for real-world website redesign. But we didn’t start with code – we started with a pencil and notebook! Yes, we knew from the beginning that we were going to start the new website from scratch and needed a foundation for both framework and design; both aspects would be reflected across all pages. We jotted down the biggest and smallest details from the old website to see what needed changing; the net neutrality alert was definitely one of them… After extensively reviewing the old website, we created a design frame for each page.&lt;/p&gt;
&lt;p&gt;I have worked in software development projects before in school, but one thing felt different at Tech Em than in the classroom: collaboration. Collaboration is profound in the real-world, and it’s safe to say that communicating with team members at the studio felt more natural – less forced, if you will. Using the power of talk (and Slack, of course), I knew what was expected of this website; already, the team was heading in the right direction.&lt;/p&gt;
&lt;p&gt;From there, we were off to the races! We had all previously learned the HTML, CSS, and Javascript basics and were transforming a template that we found to suit our conceived design on paper. Personally, I am more design-oriented and naturally enjoy creative work (a big reason why I enjoy Tech Em!); that being said, I was excited to play with the HTML and CSS to find what looked the best.&lt;/p&gt;
&lt;p&gt;There were many hurdles to clear before the website was finished. This was my first time using GitHub for a real-world project, and at first, I was a bit confused by the lexicon of words in the GitHub realm; some of my favorites include “Fork” and “Pull-Request.” Another challenge was waiting for some of the changes to appear, particularly changes made in the main CSS file; nevertheless, the incredible powers of Inspect Element allowed us to see instant changes before committing anything in GitHub. As far as technicality, most issues were in design work (unwanted wrapping of text, positioning text and objects in desired locations, unresponsive elements, calendar modal, logo size, etc.). We never found our challenges to be disheartening (we actually found them quite funny!); we kept striving ahead and used excellent peer collaboration to fix all design and framework flaws.
It’s evident that for every challenge, there indeed was a solution; and not only was there a solution to make it right, but there was a solution to make it right for us. As we neared the end of the redesign, we were nitpicking the smallest details on the site, ensuring that what end-users saw was a completely refurbished Tech Em Studios. Gone were the pictures from 2013, and in came quality photos from recent camps; gone were the old colors, and in came the modern, personalized Tech Em colors; gone was the old framework, and in came a brand new site that reflected a modern Tech Em Studios and expressed “The Art of Technology.”&lt;/p&gt;</content><category term="computer science"></category><category term="coding"></category><category term="github"></category><category term="slack"></category><category term="technology"></category></entry><entry><title>Build Your Own Laptop 2017</title><link href="/build-your-own-laptop-2017.html" rel="alternate"></link><published>2017-08-21T00:00:00-04:00</published><updated>2017-08-21T00:00:00-04:00</updated><author><name>Josef Seiler</name></author><id>tag:None,2017-08-21:/build-your-own-laptop-2017.html</id><summary type="html">&lt;h3&gt;Build Your Own Laptop&lt;/h3&gt;
&lt;h4&gt;Pi-Top&lt;/h4&gt;
&lt;p&gt;&lt;img alt="pi top building" src="images/summer_camps/pi-top/build.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The steps we completed to build the Pi-Tops can be found on the Tech Em Studios blog, &lt;a href="http://blog.techemstudios.com/pitop-building.html"&gt;&lt;strong&gt;PiTop Build&lt;/strong&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;h3&gt;Raspberry Pi Projects&lt;/h3&gt;
&lt;p&gt;Before we dove into assembling our laptops, we conducted a series of hardware and software projects on the Raspberry Pi. Students used breadboards …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Build Your Own Laptop&lt;/h3&gt;
&lt;h4&gt;Pi-Top&lt;/h4&gt;
&lt;p&gt;&lt;img alt="pi top building" src="images/summer_camps/pi-top/build.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The steps we completed to build the Pi-Tops can be found on the Tech Em Studios blog, &lt;a href="http://blog.techemstudios.com/pitop-building.html"&gt;&lt;strong&gt;PiTop Build&lt;/strong&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;h3&gt;Raspberry Pi Projects&lt;/h3&gt;
&lt;p&gt;Before we dove into assembling our laptops, we conducted a series of hardware and software projects on the Raspberry Pi. Students used breadboards to create multiple projects involving LEDs, switch devices (buttons), jumper cables, and resistors.  &lt;/p&gt;
&lt;p&gt;Several projects we completed during camp:    &lt;br&gt;
&lt;img alt="pi top building" src="images/summer_camps/pi-top/8.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;LEDs &amp;amp; Temperature Humidity Sensor&lt;/h4&gt;
&lt;p&gt;After setting up our Pis, we wired up LEDs and jumper cables on the breadboards. Without software (programs, i.e. instructions written for the computer by humans), hardware will not perform any action on its own. To control the LEDs, we created a few programs in Python to turn the LEDs on, and off. The challenge was to determine what code to add, so all LEDs could be controlled in one instance. To keep with the theme of ON/OFF, LED light shows were created. It was great to see all students find different paths to reach the same solution! We learned Morse code and implemented the practice in a Python program to relay messages coded in Morse to output on the LEDs.  &lt;/p&gt;
&lt;p&gt;Check out &lt;a href="http://blog.techemstudios.com/notes-on-setting-up-pis-for-io-lessons.html"&gt;&lt;strong&gt;Notes on Setting Up Pis for IO Lessons&lt;/strong&gt;&lt;/a&gt; for information on Raspberry Pi setup and Breadboard/LED setup and &lt;a href="http://blog.techemstudios.com/rpi-temp-and-humidity-sensing.html"&gt;&lt;strong&gt;RPI Temperature and Humidity Sensing&lt;/strong&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="pi top building" src="images/summer_camps/pi-top/unnamed.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Minecraft Python Mods&lt;/h4&gt;
&lt;p&gt;Of course, camp would not be complete without Minecraft! Campers wrote Python code to change aspects of the Minecraft gameplay experience.  &lt;/p&gt;
&lt;p&gt;For the programs we wrote in class and more, go to &lt;a href="http://blog.techemstudios.com/notes-on-setting-up-pis-to-use-minecraft-api.html"&gt;&lt;strong&gt;Notes on Setting up pis to use Minecraft API&lt;/strong&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Internet of Things (IoT)&lt;/h4&gt;
&lt;p&gt;To introduce machine-to-machine communication through the internet, students installed a hardware monitor on the Raspberry Pi called Cayenne. With Cayenne, we were able to monitor the pi's status on a web browser and mobile application.  &lt;/p&gt;
&lt;p&gt;Steps to reproduce at home: &lt;a href="http://blog.techemstudios.com/how-to-install-a-hardware-monitor-on-the-raspberry-pi.html"&gt;&lt;strong&gt;How to Install a Hardware Monitor on the Rapsberry Pi&lt;/strong&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="pi top building" src="images/summer_camps/pi-top/9.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Raspberry Pi Soundboard&lt;/h4&gt;
&lt;p&gt;We used resistors (essentially, controls the flow of electricity in a circuit), and learned how to use switching devices to create a soundboard. We wrote code to have each button on the breadboard produce its own sound.  &lt;/p&gt;
&lt;p&gt;More on the project can be found here, &lt;a href="http://blog.techemstudios.com/how-to-make-a-raspberry-pi-soundboard.html"&gt;&lt;strong&gt;How to Make a Raspberry Pi Sounboard&lt;/strong&gt;&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="pi top building" src="images/summer_camps/pi-top/IMG_0232.JPG"&gt;  &lt;/p&gt;
&lt;hr&gt;</content><category term="computer science"></category><category term="raspberry pi"></category><category term="hardware"></category><category term="pi-top"></category></entry><entry><title>Tabling Event at East Coast Triathlon Festival</title><link href="/tabling-event-at-east-coast-triathlon-festival.html" rel="alternate"></link><published>2017-05-08T00:00:00-04:00</published><updated>2017-05-08T00:00:00-04:00</updated><author><name>Josef Seiler</name></author><id>tag:None,2017-05-08:/tabling-event-at-east-coast-triathlon-festival.html</id><summary type="html">&lt;h3&gt;Tabling Event East Coast Triathlon Festival&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;Tech Em Studios Sponsors Endorphin Fitness&lt;/h4&gt;
&lt;p&gt;On May 7th, Tech Em Studios participated in a tabling event at the East Coast Triathlon Festival (ECTF)! This was a full day event sponsored in part by Tech Em Studios. The endurance competition started bright and early …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Tabling Event East Coast Triathlon Festival&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;Tech Em Studios Sponsors Endorphin Fitness&lt;/h4&gt;
&lt;p&gt;On May 7th, Tech Em Studios participated in a tabling event at the East Coast Triathlon Festival (ECTF)! This was a full day event sponsored in part by Tech Em Studios. The endurance competition started bright and early at 7am with the Super Sprint Race Start. Athletes in teams as well as solo athletes competed in classic multi-stage events of swimming, cycling and running. The participants' training for this event was tested and showed true grit, bravo!  &lt;/p&gt;
&lt;p&gt;Tech Em had a table set up at the ECTF complete with 3D printed race medals, 3D printed show lace supports, robot projects, business cards, Tech Em Summer camp brochures, and a shout out from the race microphone controller!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="ectf_table" src="images/ectf/ectf_table.jpg"&gt;  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;More information on the &lt;a href="http://www.endorphinfitness.com/races-eventseast-coast-triathlon-festival/"&gt;East Coast Triathlon Festival&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;To see the content of the brochures from the Tech Em Studios table, check out the link &lt;a href="http://register.techemstudios.com/"&gt;here&lt;/a&gt;.   &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Below are a few shots from Studio preparation and shots from Sunday's event:  &lt;/p&gt;
&lt;h3&gt;Event Photos&lt;/h3&gt;
&lt;p&gt;&lt;img alt="cycling" src="images/ectf/ectf_cycling.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="finish line" src="images/ectf/ectf_finishline.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="liberty" src="images/ectf/ectf_liberty.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="bikes" src="images/ectf/ectf_start.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="yoda" src="images/ectf/ectf_yoda.jpg"&gt;  &lt;/p&gt;
&lt;h3&gt;Prep Photos&lt;/h3&gt;
&lt;h4&gt;3D Printing&lt;/h4&gt;
&lt;p&gt;&lt;img alt="medals" src="images/ectf/ectf_medal.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="lace support print" src="images/ectf/ectf_print.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="support test" src="images/ectf/ectf_shoe.jpg"&gt;  &lt;/p&gt;</content><category term="3D Printing"></category></entry><entry><title>Build Your Own Computer Camp 2016</title><link href="/build-your-own-computer-camp-2016.html" rel="alternate"></link><published>2016-07-22T00:00:00-04:00</published><updated>2016-07-22T00:00:00-04:00</updated><author><name>Davis Mohar</name></author><id>tag:None,2016-07-22:/build-your-own-computer-camp-2016.html</id><summary type="html">&lt;p&gt;Follow up on BYOC camp&lt;/p&gt;</summary><content type="html">&lt;p&gt;To start off the week, the campers learned about how a computer works and the function of each part of the computer. We went over the processor, motherboard, RAM, power supply, solid state drives, and disk drive. Over the first two days, we installed all the parts, and wired everything up. Once the computer was built, they installed Windows 10 onto their computers as well as a variety of other programs such as antimalware, runtimes, and drivers. We then went over computer secuirty and how to best keep themselves and their computers safe from viruses, malware, or phishing. We also discussed troubleshooting steps for both hardware and software issuses so that they will be able to fix any problems that could arise in the future. &lt;/p&gt;
&lt;p&gt;All of the presentations we covered: &lt;a href="https://docs.google.com/presentation/d/1T8ERaT-Cm7jPNVmd2wAVDKt4LAflvoQ5hqoaN9F84ic/edit?usp=sharing"&gt;Computer Parts&lt;/a&gt;, &lt;a href="https://docs.google.com/presentation/d/1WZyjCNaGeupDpLhme4ypItIhnkPwYxD6ut5nj0isg3E/edit?usp=sharing"&gt;Troubleshooting&lt;/a&gt;, &lt;a href="https://docs.google.com/presentation/d/1lJvTJYlD7aN2kW3RDKmoKvHd8Q-TOKdG8H45cWhkQUE/edit?usp=sharing"&gt;Computer Safety&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have a &lt;a href="blog.techemstudios.com/computer-safety-2016.html"&gt;full blog post&lt;/a&gt; on computer safety up on our site as well.&lt;/p&gt;</content><category term="BYOC"></category></entry><entry><title>Computer Security</title><link href="/computer-security.html" rel="alternate"></link><published>2016-07-22T00:00:00-04:00</published><updated>2016-07-22T00:00:00-04:00</updated><author><name>Chris Kefalas</name></author><id>tag:None,2016-07-22:/computer-security.html</id><summary type="html">&lt;p&gt;Extra Security Post&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Computer Safety&lt;/h3&gt;
&lt;p&gt;On Wednesday after we had gotten everything hooked up, and our Windows installation completed I wanted to take some time to talk to the kids about the importance of computer,  and Internet safety.  We live in an exciting age with the Internet of Things, but with the excitement comes some risk. While it's great having all of these devices online, it makes the attack surface for malicious actors much larger. There is good news though! We can all take steps to greatly reduce our risk of falling victim to scams, viruses, and annoying adware. My goal with this post is to detail what I went over in the presentation, and also provide direct links to the software I recommend on keeping yourself safe online. &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;The Threat is Real&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Over &lt;strong&gt;169 million personal records&lt;/strong&gt; were exposed in 2015, stemming from 781 publicized breaches across the financial, business, education, government and healthcare sectors. &lt;a href="http://www.idtheftcenter.org/ITRC-Surveys-Studies/2015databreaches.html"&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In 2015, there were &lt;strong&gt;38 percent&lt;/strong&gt; more security incidents detected than in 2014.&lt;a href="http://www.pwc.com/gx/en/issues/cyber-security/information-security-survey.html"&gt;[2]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;34.2%&lt;/strong&gt; of user computers were subjected to at least one web attack over the year.&lt;a href="https://securelist.com/analysis/kaspersky-security-bulletin/73038/kaspersky-security-bulletin-2015-overall-statistics-for-2015/"&gt;[3]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are plenty of malicious actors out there, from all across the globe. It can be very hard to prosecute, and find these people because of international laws, but also because they usually take good care in making sure what they do is untraceable back to them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am convinced that there are only two types of companies: those that have been hacked and those that will be. And even they are converging into one category: companies that have been hacked and will be hacked again.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Robert S. Mueller, III, FBI Director, 2012 &lt;a href="https://archives.fbi.gov/archives/news/speeches/combating-threats-in-the-cyber-world-outsmarting-terrorists-hackers-and-spies"&gt;[4]&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can't protect ourselves from everything, and we are helpless when a company gets hacked. But we can take many steps to help protect ourselves from making it any easier for an attacker to get our information, or infect our computer with malicious software. &lt;/p&gt;
&lt;p&gt;Focus Points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strong Passwords &lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Anti-Virus&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Adware &amp;amp; Spyware detection&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Protecting Yourself Online&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By looking into these areas, and being aware of what you are doing on the computer you will be ahead of the game, and able to detect, and know what to do if something ever happens!&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Strong Passwords&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Strong Passwords" src="http://imgur.com/rMagpJb.jpg"&gt;&lt;/p&gt;
&lt;p&gt;We all love a nice, easy, quick password to type in. Something that isn't hard to remember. Guess who else loves those passwords?! Those dudes trying to get your bank account number! The password is going to be your first defense, especially with your online accounts. By creating a strong password you are making it harder for an attacker to guess that password. One of the most popular attacks towards someones password is using a Brute Force attack where they use a dictionary to guess all the combinations of various words. So by creating a password that isn't found in a dictionary, you are a step ahead of the game in protecting yourself. You'll be best protected by using upper and lower case letters, numbers, and symbols in your password. Make sure to use a minimum of 12 characters when choosing a password, and if you are really worried never use the same password twice. Using a password manager like KeyPassX &lt;a href="https://www.keepassx.org"&gt;[5]&lt;/a&gt; or LastPass &lt;a href="https://lastpass.com"&gt;[6]&lt;/a&gt; can help you keep track of all these unique, and complicated passwords! &lt;/p&gt;
&lt;h3&gt;Anti-Virus&lt;/h3&gt;
&lt;p&gt;Viruses can definitely be a pain, and make your experience frustrating. Anti-Virus programs have evolved over the years, and we have seen many different companies market their latest and greatest. Thankfully for Windows users Microsoft has gotten on board and created &lt;strong&gt;Windows Defender&lt;/strong&gt;. This is a piece of software that comes installed on Windows 8, and Windows 10. Users running systems with versions of Windows pre Windows 8, you will look for &lt;strong&gt;Security Essentials&lt;/strong&gt; which is the same thing. Both of these pieces of software will be free, and included with Windows. &lt;/p&gt;
&lt;p&gt;If you're looking to add another layer of Anti-Virus, I would suggest looking into Anti-Virus Guard &lt;a href="http://www.avg.com/us-en/homepage"&gt;[7]&lt;/a&gt;, AVG for short. It is a free, anti-virus that will help catch anything that Windows Defender might miss. &lt;/p&gt;
&lt;p&gt;Apple users can use the OS X version of AVG to protect themselves from viruses. Apple computers tend to be targeted less because they are less prevalent in the computer population than Windows operating computers. But you still should be aware of the possibilities, and protect yourself. &lt;/p&gt;
&lt;p&gt;Both of these are going to be a good first line of defense from most of the main- stream virus that your computer has potential to catch. It's very important to make sure you keep these updated, and are using the latest virus definitions. If your computer does get a virus that you are having trouble removing, look through Google for anything related to that specific virus, or seek out professional assistance. &lt;/p&gt;
&lt;h3&gt;Adware, Spyware Detection&lt;/h3&gt;
&lt;p&gt;While these types of malicious software aren't going to kill you, they will definitely make your user experience annoying. &lt;strong&gt;Adware&lt;/strong&gt; is known as a type of software that installs and displays ads on the users screen. They work by hijacking the legitimate ads on websites, and display their own. Sometimes even displaying ads outside of the web browser. They usually come from clicking on malicious links, or from installing certain kinds of software that sneak them in. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whenever installing new software always make sure to read the check boxes! Sometimes those check boxes will ask you if you want to install some sketchy ad package! Their hope is that you won't read them, and click next next next! &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Spyware&lt;/strong&gt; is much more malicious. You can define spyware as any type of malicious software that is meant to spy on the user looking to gather login, and password information. They are looking to get into your email, and your bank accounts. Usually you will get spyware from clicking on malicious links, and downloading fake software that isn't the application you think it is. Always know the sites that you are on, and pay attention to the URL. &lt;/p&gt;
&lt;p&gt;Two pieces of software that I recommend to take care of this would be Malware Bytes&lt;a href="https://www.malwarebytes.com"&gt;[8]&lt;/a&gt;, and Super-Anti Spyware&lt;a href="http://superantispyware.com"&gt;[9]&lt;/a&gt;. Both have free versions that you can use to help remove these types of software, and help hopefully stop them before even have a chance! You need to make sure that you use the latest versions, and also before running scans, update your virus definitions. Updating your virus definitions can be done inside the application. If you don't want to have the application running all the time, I would suggest to try run it at least twice a month. It can never hurt, and will help to remove any junk that you might not even know you have! They can be sneaky! &lt;/p&gt;
&lt;h3&gt;Protecting Yourself Online&lt;/h3&gt;
&lt;p&gt;We do so much online these days! We do our banking, talk to friends, and family. We play video games, and video chat! And with Internet access available practically all over the globe, there are tons of people online, going to the same sites that we all use. Being safe online is a top priority for anyone wanting to protect their personal information, and avoid any types of identity theft. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can never over stress the importance of having a strong password. That is going to help you tremendously in avoiding someone being able to guess your password, and getting access to your account. &lt;/li&gt;
&lt;li&gt;Remember to use a combination of upper and lower case letters, numbers, and symbols. A minimum length of 12-14 characters is suggested. &lt;/li&gt;
&lt;li&gt;Don't use the same password for all your accounts, especially ones you are really trying to protect. This prevents them getting your password from one site, and than being able to compromise all your accounts. &lt;/li&gt;
&lt;li&gt;Use a password manager to help keep track of the different sites, and different passwords you create. &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Two-Factor Authentication if you available. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never &lt;strong&gt;EVER&lt;/strong&gt; reveal any personally identifiable information to strangers online. There shouldn't ever been any reason to, and if someone is asking for that information there intentions should be questioned. Don't trust that just because someone has a Facebook, and pictures that they are who they say they are. You should always be cautious when talking with others online. By never revealing anything about yourself, and potentially using a pesudo first name you can keep yourself safe while navigating the web, and talking to others! &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If available for that site,  always use &lt;strong&gt;HTTPS!!!&lt;/strong&gt; HTTPS is a secure version of HTTP that will help to encrypt your traffic so if the attacker does get ahold of it, they shouldn't have any idea what it says! There are a couple plugins&lt;a href="https://www.eff.org/https-everywhere%20"&gt;[13]&lt;/a&gt; that will force your browser to use HTTPS if available. You can tell if you are using HTTPS when visiting a certain website by looking at the address bar up top and seeing a pad lock. Firefox and Google Chrome will display a green pad lock, and Safari will show gray pad lock. Also the URL will start with HTTPS instead of HTTP. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another good way to keep the malicious activity found on some websites at bay is the use of an AdBlocker. There are a couple different ones out there, but I would recommend uBlock&lt;a href="https://www.ublock.org"&gt;[11]&lt;/a&gt;, or AdBlockPlus&lt;a href="https://adblockplus.org"&gt;[10]&lt;/a&gt;. They both do the same thing, so choose either one. You don't need to install both of them. By using a piece of software like this you will be blocking ads, and reduce the chances of clicking on a malicious one. As well as be preventing some of the malicious scripts that hide on some websites. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;Phishing&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Phishing is something that I wanted to mention in this post because I feel that it is a very effective attack for attackers to gain access to peoples personal accounts. And over the years has become a more prevalent threat on the Internet. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Phishing" src="http://imgur.com/s3azhQU.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Phishing is the practice of sending fake emails that appear to look real, and come from reputable sources. Usually they will be like an email from your bank saying to please reset your password, with a link below that they want you to click. Usually they will even make the email format look exactly like how a legitimate one. But that is the point, to make you think it actually came from your bank! Some tips below for detecting phishing emails: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay very close attention to the senders email address. You can't always count on this to not be spoofed and appear to be actually from the bank, but most of the time you will see something like &lt;em&gt;bankofamerica.blah.silly@loserhacker.com&lt;/em&gt;. So while at first glance it might appear to be from Bank of America, looking a little closer we can see that it definitely didn't, and should be discarded.&lt;/li&gt;
&lt;li&gt;If the email is very vague about who specifically they are contacting that can raise some flags. For example if the message starts with "Hello TechEm, we are contacting to ..." versus just "Hello, we are contacting to ..."  This is important because attackers will send these phishing emails out en masse and usually don't know any information of the recipients. &lt;/li&gt;
&lt;li&gt;Also just look closely, and read the email before you jump to click on something in it. You might see something out of place, and easily figure out the email is fake. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the end of the day if you are really worried that the email might be fake, just ignore it and call the company up directly. Than you can be assured that you aren't replying or clicking anything suspicious. They might even be able to tell you if they sent you an email recently so you know for sure! Better to be safe than sorry! &lt;/p&gt;
&lt;p&gt;If you want to read more about phishing, the Federal Trade Commission has written some good information&lt;a href="https://www.consumer.ftc.gov/articles/0003-phishing"&gt;[12]&lt;/a&gt; to help people learn about these types of attacks, and other tips on preventing them.&lt;/p&gt;
&lt;h3&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;Like mentioned in the beginning we can't always protect ourselves from every threat out there in cyber space. But we can reduce our chances, and make exploring the web much safer for ourselves. We can take steps to prevent sketchy software from installing and infecting our computers. We can use software to detect, and clean up anything that might have been installed under our nose. And we can use methods to make sure our passwords are strong, and our accounts are locked down. Setting up alerts for logins to your accounts is always useful, and using Two-Factor authentication whenever available is the ultimate thing for locking down an account, and keeping the bad guys out.  These are all things we already do every day like locking our houses, using a locked and fire proof filing cabinet or safe. It's just instead of calling you on the phone to scam you, or knocking on your door, they send you an email, or message you through Facebook. Some of the attacks have shifted, and gotten more technical but a lot is very similar to things we already work to protect ourselves against. It's just the attack surface has changed to the computer. So we have to evolve our techniques, and adjust our perspective of the possible avenues of attacks. Thankfully it's not close to impossible, and allows us to remain safe, and avoid having information compromised! &lt;/p&gt;
&lt;p&gt;I'm sure I've left something out! And I always suggest people to look for themselves, and read through a couple different sites to learn about computer safety, and security. These are the tips, and tricks I have been using to keep myself safe online, and should give you a little overview of where to start if you are interested in protecting yourself more, and different types of software to do so. Please don't hesitant if you have any questions to reach out, and email me. I love talking about computer security, and safety! &lt;/p&gt;
&lt;p&gt;Chris Kefalas
me@chriskefalas.me&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Links:&lt;/h4&gt;
&lt;p&gt;[1] "Identity Theft Resource Center Breach Report Hits Near Record High in 2015." ID Theft Center. January 26, 2016. Accessed July 21, 2016. http://www.idtheftcenter.org/ITRC-Surveys-Studies/2015databreaches.html.&lt;/p&gt;
&lt;p&gt;[2] "Global State of Information Security® Survey 2016." PwC. Accessed July 21, 2016. http://www.pwc.com/gx/en/issues/cyber-security/information-security-survey.html.&lt;/p&gt;
&lt;p&gt;[3] "Kaspersky Security Bulletin 2015." Secure List. December 15, 2015. Accessed July 21, 2016. https://securelist.com/analysis/kaspersky-security-bulletin/73038/kaspersky-security-bulletin-2015-overall-statistics-for-2015/.&lt;/p&gt;
&lt;p&gt;[4] "Combating Threats in the Cyber World: Outsmarting Terrorists, Hackers, and Spies." FBI. March 1, 2012. Accessed July 21, 2016. https://archives.fbi.gov/archives/news/speeches/combating-threats-in-the-cyber-world-outsmarting-terrorists-hackers-and-spies.&lt;/p&gt;
&lt;p&gt;[5] https://www.keepassx.org&lt;/p&gt;
&lt;p&gt;[6] https://lastpass.com&lt;/p&gt;
&lt;p&gt;[7] http://www.avg.com/us-en/homepage&lt;/p&gt;
&lt;p&gt;[8] https://www.malwarebytes.com&lt;/p&gt;
&lt;p&gt;[9] http://superantispyware.com&lt;/p&gt;
&lt;p&gt;[10] https://adblockplus.org&lt;/p&gt;
&lt;p&gt;[11] https://www.ublock.org&lt;/p&gt;
&lt;p&gt;[12] https://www.consumer.ftc.gov/articles/0003-phishing&lt;/p&gt;
&lt;p&gt;[13] https://www.eff.org/https-everywhere%20&lt;/p&gt;</content><category term="BYOC"></category><category term="Security"></category></entry><entry><title>Design Thinking Outline</title><link href="/design-thinking-outline.html" rel="alternate"></link><published>2016-07-21T00:00:00-04:00</published><updated>2016-07-21T00:00:00-04:00</updated><author><name>Josef Seiler</name></author><id>tag:None,2016-07-21:/design-thinking-outline.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Outline for the Design Thinking Process Used in Tech Em'S Game Design Classes and Camps.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Design thinking is a user-centered approach to solving everyday problems.  This a rough outline of the design thinking process followed during the Game Design classes and camps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Observation&lt;/strong&gt;    &lt;ul&gt;
&lt;li&gt;What are your favorite games to play …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Outline for the Design Thinking Process Used in Tech Em'S Game Design Classes and Camps.&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;Design thinking is a user-centered approach to solving everyday problems.  This a rough outline of the design thinking process followed during the Game Design classes and camps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Observation&lt;/strong&gt;    &lt;ul&gt;
&lt;li&gt;What are your favorite games to play?&lt;/li&gt;
&lt;li&gt;Why are they your favorite games?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Brainstorming&lt;/strong&gt; (&lt;em&gt;from design thinking questions sheet&lt;/em&gt;)  &lt;ul&gt;
&lt;li&gt;What makes your favorite games fun to play? [what makes these games fun?]  &lt;/li&gt;
&lt;li&gt;What would you include in your game?  &lt;/li&gt;
&lt;li&gt;What would you leave out for your game?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;From the answers to these questions above, guidelines are now set for the design of the game. Moreover, from these guidelines, come the various challenges of finding out how to design our game using these guidelines. We start by figuring out multiple solutions to use while creating the game.     &lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Protoyping&lt;/strong&gt;    &lt;ul&gt;
&lt;li&gt;Create your game!  &lt;/li&gt;
&lt;li&gt;Keep in mind the brainstorming topics and design thinking questions  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Test your game  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what do you like?  &lt;/li&gt;
&lt;li&gt;what could you change?  &lt;/li&gt;
&lt;li&gt;what's missing? what could you add?  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Collaborate  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;have someone else play your game - vice versa  &lt;/li&gt;
&lt;li&gt;get feedback/provide feedback  &lt;/li&gt;
&lt;li&gt;from the feedback, we conjure up more solutions to implement in the design.  &lt;/li&gt;
&lt;li&gt;repeat the process!   &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Below is a rough diagram of the overall design process scheme:  &lt;br&gt;
&lt;img alt="dt diagram" src="images/DT-Process-Game-Design.jpg"&gt;&lt;br&gt;
The green arrows represent the conintuous iteration of the whole process.  &lt;/p&gt;
&lt;p&gt;We used this process to make awesome games!  &lt;/p&gt;</content><category term="floors"></category><category term="hyperpad"></category><category term="hopscotch"></category><category term="coding"></category><category term="game design"></category><category term="design thinking"></category><category term="techcamp"></category></entry><entry><title>Python Coding Camp 2016</title><link href="/python-coding-camp-2016.html" rel="alternate"></link><published>2016-07-18T00:00:00-04:00</published><updated>2016-07-18T00:00:00-04:00</updated><author><name>Davis Mohar</name></author><id>tag:None,2016-07-18:/python-coding-camp-2016.html</id><summary type="html">&lt;p&gt;Follow up on Python Coding Summer Camp&lt;/p&gt;</summary><content type="html">&lt;p&gt;Thanks to all our new coders for the great week at Python Coding Camp!&lt;/p&gt;
&lt;p&gt;We started off the week by diving into the basics of python. We went over basic printing, math functions, and getting user input. We finished the first day up by writing up a calculator that allowed the user to pick which operation they want to use. On day 2, we reviewed the sytax we had learned yesterday and then moved on to create a automatic mad libs program. We went over some more python features such as loops, arrays, and functions and then ended the day by starting a random sentence program that downloaded a list of random words from the internet and then would insert them into our sentence. The next two days we worked on projects such as a coin flip statistic program as well as a graphical program using the turtle library. &lt;/p&gt;
&lt;p&gt;All the code that we worked on is availble on &lt;a href="https://github.com/davismohar/techempython"&gt;github&lt;/a&gt; for you to download. &lt;/p&gt;
&lt;p&gt;To get python installed on your home computer, go to python.org, click on the downloads tab, and then download python 2.7.12 (NOT Python 3.5.2, they are not interchangeable)
You can then run the downloaded file and python should be installed on your computer! You can now run and edit any .py file using the new IDLE program that you just downloaded.&lt;/p&gt;</content><category term="python"></category><category term="coding"></category><category term="pythonista"></category></entry><entry><title>FORTRAN and CoffeeScript</title><link href="/fortran-and-coffeescript.html" rel="alternate"></link><published>2015-03-11T00:00:00-04:00</published><updated>2015-03-11T00:00:00-04:00</updated><author><name>Wray Mills</name></author><id>tag:None,2015-03-11:/fortran-and-coffeescript.html</id><summary type="html">&lt;p&gt;A week in the life...&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Language Elegance&lt;/h3&gt;
&lt;p&gt;What does FORTRAN and CoffeeScript have in common? Well, aside from
being programming languages (of course, there could be some arguments
about formal languages vs. scripting languages vs. meta-scripting
language -- just humor me for now), not much. But, I have the
"pleasure" of working on a project that is using both. And, in fact,
in a horrible violation of DRY, we are currently defining probability
distributions and prob. dist. approximations in both! This will change soon; however, for now, it
makes the project kind of cool. Its like the best and worst of
old-school and new school. One can actually learn from reviewing dated
FORTRAN code just as one can learn from the CoffeeScript and actually
cross-leverage some concepts. Regardless, one can't help but
appreciate the elegance of the CoffeeScript compared with the
FORTRAN. Check this out:&lt;/p&gt;
&lt;h4&gt;FORTRAN&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;!   Creating the Normal Approximation function. For now, we are using this from the shell.f module for the&lt;/span&gt;
&lt;span class="c"&gt;!   Gaussian distributions.&lt;/span&gt;
    &lt;span class="k"&gt;RECURSIVE FUNCTION &lt;/span&gt;&lt;span class="n"&gt;normal_approx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;IMPLICIT NONE&lt;/span&gt;
&lt;span class="k"&gt;      &lt;/span&gt;&lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;KIND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="k"&gt;INTENT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
      &lt;span class="kt"&gt;REAL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;KIND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;normal_approx&lt;/span&gt;
      &lt;span class="kt"&gt;INTEGER&lt;/span&gt; &lt;span class="kd"&gt;::&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;

&lt;span class="c"&gt;!     if z is less than 0, then the value above is equal&lt;/span&gt;
&lt;span class="c"&gt;!     to 1 - Q(-z), so return 1 - temp&lt;/span&gt;
      &lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
&lt;span class="k"&gt;         &lt;/span&gt;&lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;normal_approx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;END IF&lt;/span&gt;


&lt;span class="c"&gt;!     calculate the number according to the polynomial (these should be constants)&lt;/span&gt;
      &lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.0498673470&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;                          &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.0211410061&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
     &lt;span class="mi"&gt;2&lt;/span&gt;                          &lt;span class="mf"&gt;0.0032776263&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
     &lt;span class="mi"&gt;3&lt;/span&gt;                          &lt;span class="mf"&gt;0.0000380036&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
     &lt;span class="mi"&gt;4&lt;/span&gt;                          &lt;span class="mf"&gt;0.0000488906&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
     &lt;span class="mi"&gt;5&lt;/span&gt;                          &lt;span class="mf"&gt;0.0000053830&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; 

&lt;span class="c"&gt;!     verify that the number is within the computational&lt;/span&gt;
&lt;span class="c"&gt;!     limits of the dist_r &lt;/span&gt;
      &lt;span class="k"&gt;IF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="k"&gt;THEN&lt;/span&gt;
&lt;span class="k"&gt;         &lt;/span&gt;&lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;END IF&lt;/span&gt;
&lt;span class="k"&gt;      IF&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)))).&lt;/span&gt;&lt;span class="nb"&gt;AND&lt;/span&gt;&lt;span class="p"&gt;.(&lt;/span&gt;
     &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;THEN&lt;/span&gt;
&lt;span class="k"&gt;         &lt;/span&gt;&lt;span class="n"&gt;normal_approx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="k"&gt;END IF&lt;/span&gt;

&lt;span class="k"&gt;      WRITE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UNIT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;FMT&lt;/span&gt;&lt;span class="o"&gt;=*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;normal approx at &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; is &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="n"&gt;normal_approx&lt;/span&gt;

    &lt;span class="k"&gt;END FUNCTION&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Coffeescript&lt;/h4&gt;
&lt;p&gt;Granted, this could use a little more comments. But, it essentially
looks just like the definition for the Normal Approximation in the
textbook, so we can simply reference the section in the function definition comment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;Q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0498673470&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0211410061&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="mf"&gt;0.0032776263&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0000380036&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="mf"&gt;0.0000488906&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.0000053830&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0..6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Digital Logic Design&lt;/h3&gt;
&lt;p&gt;Oh, and just to make the week even more well-rounded (in a Comp
Sci. sense), I've had a couple of my elementary classes working
through the binary number system, basic logic gates to form
half-adders to form full-adders to perform multi-digit binary
arithmetic! All this provides a nice setup for their Arduino sketches
for a microcontroller to control an 8x8 LED matrix.&lt;/p&gt;
&lt;h3&gt;Minecraft, Arduino, Python, FORTRAN, C, Ruby, and Coffeescript for&lt;/h3&gt;
&lt;h4&gt;LED controllers, minecraft server mods, enrollment systems, and&lt;/h4&gt;
&lt;h4&gt;probabilistic distribution fitting engines&lt;/h4&gt;
&lt;p&gt;And actually even a few more languages/tasks in between. So, actually, if every week could be this cool, that
would be awesome. In fact, what makes this even better is that I get
to share a lot of this with our next generation of Software
Engineers. It's extremely rewarding to see such young students "coding"
away in Python or even writing out bytes in bits for an Arduino sketch
--  yes, 3rd graders defining bytes using bits in C. And to have an
intern who is still just a sophomore in high school defining multiple
ruby on rails environments (and all the related excruciating
regression testing getting all the gems at the right versions) who can
do such a task with very, very little guidance from me! And to work
with an undergrad on a graduate-level project who is such a gifted
coder in the most modern languages (like CoffeeScript) and who is
headed to Microsoft this year, makes me very comfortable with the
future of technology in the US!!&lt;/p&gt;</content><category term="FORTRAN"></category><category term="coffeescript"></category><category term="binary logic"></category><category term="half-adder"></category></entry><entry><title>What is Tech Em Studios</title><link href="/what-is-tech-em-studios.html" rel="alternate"></link><published>2014-03-28T23:08:00-04:00</published><updated>2014-03-28T23:08:00-04:00</updated><author><name>Wray Mills</name></author><id>tag:None,2014-03-28:/what-is-tech-em-studios.html</id><summary type="html">&lt;p&gt;Tech Training, Classes, and Camps&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tech Em Studios offers classes and camps focused on applied computer science and computer-aided design at our studio in Short Pump and at local secondary schools. Our classes help students understand the exciting and evolving relationship of technology and creativity. So whether you want to learn about using technology for art, seriously prepare your child for an applied science and engineering program or get yourself up to speed on current device capabilities, we are building a range of curriculums to meet the needs of your family.&lt;/p&gt;
&lt;p&gt;So, that is the marketing pitch. What about the story behind the creation of Tech Em? Well, we have three girls that are 5, 7, and 9 and I was concerned about their practical technology skills. It was 2013 after all and it seemed I had just as much opportunity to learn how to code and build my own circuits and rockets back in the 80's. Having been in "corporate" IT for almost 20 years, I had not kept up with technology education opportunities (or lack thereof) for secondary school students as well as adults outside the IT profession. That is how the idea for Tech Em starting brewing.&lt;/p&gt;
&lt;p&gt;And we've become focused on the tech gap (and doing what we can to address the gap -- providing more tech education and experience). I'm referring to the gap growing between the demand for Programmers (people who can code) and people in the U.S. who can actually code. And so I've been developing curriculums that incorporate introductory Computer Science concepts in a very hands-on and applied way (designing, coding, testing, building). It actually all lines up very neatly with organizations like &lt;a href="http://code.org"&gt;code.org&lt;/a&gt;, the maker movement, all the open source hardware devices available and, of course, 3D printing.&lt;/p&gt;
&lt;p&gt;Its turning out to be more than a new business venture, but a re-awakening of my inner geek since I get to re-learn and re-appreciate applied Computer Science to teach it. Furthermore, most of the kids I work with want to code and build more than use -- that actually isn't the problem. The challenge is sorting through all that is available to streamline kids' absorption of the key concepts so that they are learning how to think like a creative coder within the level-appropriate Engineering theory and discipline.&lt;/p&gt;
&lt;p&gt;The name? Well, emersion is sort of a play on immersion, but is really the opposite of submersion. We'd like to think we are helping people rise up out of the sea of technology. Whether we are helping students keep from drowing in technology (devices) or we are training the next Engineers who are rising out of the sea of users to become builders and creators. Sounds pretty cool right, but also Tech Em just works better than Tech Im!&lt;/p&gt;</content><category term="mission"></category></entry></feed>